package com.discord.analytics.generated.events;

import b.d.b.a.outline;
import com.discord.analytics.generated.traits.TrackBase;
import com.discord.analytics.generated.traits.TrackBase2;
import com.discord.analytics.generated.traits.TrackNetworkInformationDurations;
import com.discord.analytics.generated.traits.TrackNetworkInformationDurations2;
import com.discord.api.science.AnalyticsSchema;
import com.discord.models.domain.ModelAuditLogEntry;
import d0.z.d.Intrinsics3;
import java.util.List;
import kotlin.Metadata;

/* compiled from: TrackVideoStreamEnded.kt */
@Metadata(bv = {1, 0, 3}, d1 = {"\u0000^\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\t\n\u0002\b3\n\u0002\u0010\r\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b8\n\u0002\u0010\u0007\n\u0002\bX\n\u0002\u0010 \n\u0002\b^\n\u0002\u0018\u0002\n\u0002\b/\b\u0086\b\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u0003J\u0010\u0010\u0005\u001a\u00020\u0004HÖ\u0001¢\u0006\u0004\b\u0005\u0010\u0006J\u0010\u0010\b\u001a\u00020\u0007HÖ\u0001¢\u0006\u0004\b\b\u0010\tJ\u001a\u0010\r\u001a\u00020\f2\b\u0010\u000b\u001a\u0004\u0018\u00010\nHÖ\u0003¢\u0006\u0004\b\r\u0010\u000eR\u001b\u0010\u0010\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0010\u0010\u0011\u001a\u0004\b\u0012\u0010\u0013R\u001b\u0010\u0014\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0014\u0010\u0011\u001a\u0004\b\u0015\u0010\u0013R\u001b\u0010\u0016\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0016\u0010\u0011\u001a\u0004\b\u0017\u0010\u0013R\u001b\u0010\u0018\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0018\u0010\u0011\u001a\u0004\b\u0019\u0010\u0013R\u001b\u0010\u001a\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u001a\u0010\u0011\u001a\u0004\b\u001b\u0010\u0013R\u001b\u0010\u001c\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u001c\u0010\u0011\u001a\u0004\b\u001d\u0010\u0013R\u001c\u0010\u001e\u001a\u00020\u00048\u0016@\u0016X\u0096D¢\u0006\f\n\u0004\b\u001e\u0010\u001f\u001a\u0004\b \u0010\u0006R\u001b\u0010!\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b!\u0010\u0011\u001a\u0004\b\"\u0010\u0013R\u001b\u0010#\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b#\u0010\u0011\u001a\u0004\b$\u0010\u0013R\u001b\u0010%\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b%\u0010\u0011\u001a\u0004\b&\u0010\u0013R\u001b\u0010'\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b'\u0010\u0011\u001a\u0004\b(\u0010\u0013R\u001b\u0010)\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b)\u0010\u0011\u001a\u0004\b*\u0010\u0013R\u001b\u0010+\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b+\u0010\u0011\u001a\u0004\b,\u0010\u0013R\u001b\u0010-\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b-\u0010\u0011\u001a\u0004\b.\u0010\u0013R\u001b\u0010/\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b/\u0010\u0011\u001a\u0004\b0\u0010\u0013R\u001b\u00101\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b1\u0010\u0011\u001a\u0004\b2\u0010\u0013R\u001b\u00103\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b3\u0010\u0011\u001a\u0004\b4\u0010\u0013R\u001b\u00105\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b5\u0010\u0011\u001a\u0004\b6\u0010\u0013R\u001b\u00107\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b7\u0010\u0011\u001a\u0004\b8\u0010\u0013R\u001b\u00109\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b9\u0010\u0011\u001a\u0004\b:\u0010\u0013R\u001b\u0010;\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b;\u0010\u0011\u001a\u0004\b<\u0010\u0013R\u001b\u0010=\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b=\u0010\u0011\u001a\u0004\b>\u0010\u0013R\u001b\u0010?\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\f\n\u0004\b?\u0010@\u001a\u0004\bA\u0010BR\u001b\u0010D\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\f\n\u0004\bD\u0010E\u001a\u0004\bF\u0010GR\u001b\u0010H\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bH\u0010\u0011\u001a\u0004\bI\u0010\u0013R$\u0010K\u001a\u0004\u0018\u00010J8\u0016@\u0016X\u0096\u000e¢\u0006\u0012\n\u0004\bK\u0010L\u001a\u0004\bM\u0010N\"\u0004\bO\u0010PR\u001b\u0010Q\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\f\n\u0004\bQ\u0010E\u001a\u0004\bR\u0010GR\u001b\u0010S\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bS\u0010\u0011\u001a\u0004\bT\u0010\u0013R\u001b\u0010U\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bU\u0010\u0011\u001a\u0004\bV\u0010\u0013R\u001b\u0010W\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bW\u0010\u0011\u001a\u0004\bX\u0010\u0013R\u001b\u0010Y\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bY\u0010\u0011\u001a\u0004\bZ\u0010\u0013R\u001b\u0010[\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b[\u0010\u0011\u001a\u0004\b\\\u0010\u0013R\u001b\u0010]\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b]\u0010\u0011\u001a\u0004\b^\u0010\u0013R\u001b\u0010_\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b_\u0010\u0011\u001a\u0004\b`\u0010\u0013R\u001b\u0010a\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\ba\u0010\u0011\u001a\u0004\bb\u0010\u0013R\u001b\u0010c\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bc\u0010\u0011\u001a\u0004\bd\u0010\u0013R\u001b\u0010e\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\be\u0010\u0011\u001a\u0004\bf\u0010\u0013R\u001b\u0010g\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bg\u0010\u0011\u001a\u0004\bh\u0010\u0013R\u001b\u0010i\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bi\u0010\u0011\u001a\u0004\bj\u0010\u0013R\u001b\u0010k\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bk\u0010\u0011\u001a\u0004\bl\u0010\u0013R\u001b\u0010m\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bm\u0010\u0011\u001a\u0004\bn\u0010\u0013R\u001b\u0010o\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bo\u0010\u0011\u001a\u0004\bp\u0010\u0013R\u001b\u0010q\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bq\u0010\u0011\u001a\u0004\br\u0010\u0013R\u001b\u0010s\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bs\u0010\u0011\u001a\u0004\bt\u0010\u0013R\u001b\u0010u\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bu\u0010\u0011\u001a\u0004\bv\u0010\u0013R\u001b\u0010w\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bw\u0010\u0011\u001a\u0004\bx\u0010\u0013R\u001b\u0010y\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\by\u0010\u0011\u001a\u0004\bz\u0010\u0013R\u001b\u0010{\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\f\n\u0004\b{\u0010E\u001a\u0004\b|\u0010GR\u001b\u0010}\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\f\n\u0004\b}\u0010E\u001a\u0004\b~\u0010GR\u001c\u0010\u007f\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\r\n\u0004\b\u007f\u0010\u0011\u001a\u0005\b\u0080\u0001\u0010\u0013R\u001e\u0010\u0081\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0081\u0001\u0010\u0011\u001a\u0005\b\u0082\u0001\u0010\u0013R!\u0010\u0084\u0001\u001a\u0005\u0018\u00010\u0083\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\b\u0084\u0001\u0010\u0085\u0001\u001a\u0006\b\u0086\u0001\u0010\u0087\u0001R\u001e\u0010\u0088\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0088\u0001\u0010\u0011\u001a\u0005\b\u0089\u0001\u0010\u0013R\u001e\u0010\u008a\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008a\u0001\u0010\u0011\u001a\u0005\b\u008b\u0001\u0010\u0013R\u001e\u0010\u008c\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008c\u0001\u0010\u0011\u001a\u0005\b\u008d\u0001\u0010\u0013R\u001e\u0010\u008e\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008e\u0001\u0010\u0011\u001a\u0005\b\u008f\u0001\u0010\u0013R\u001e\u0010\u0090\u0001\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0090\u0001\u0010E\u001a\u0005\b\u0091\u0001\u0010GR\u001e\u0010\u0092\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0092\u0001\u0010\u0011\u001a\u0005\b\u0093\u0001\u0010\u0013R\u001e\u0010\u0094\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0094\u0001\u0010\u0011\u001a\u0005\b\u0095\u0001\u0010\u0013R\u001e\u0010\u0096\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0096\u0001\u0010\u0011\u001a\u0005\b\u0097\u0001\u0010\u0013R\u001e\u0010\u0098\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0098\u0001\u0010\u0011\u001a\u0005\b\u0099\u0001\u0010\u0013R\u001e\u0010\u009a\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009a\u0001\u0010\u0011\u001a\u0005\b\u009b\u0001\u0010\u0013R\u001e\u0010\u009c\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009c\u0001\u0010\u0011\u001a\u0005\b\u009d\u0001\u0010\u0013R\u001e\u0010\u009e\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009e\u0001\u0010\u0011\u001a\u0005\b\u009f\u0001\u0010\u0013R\u001e\u0010 \u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b \u0001\u0010\u0011\u001a\u0005\b¡\u0001\u0010\u0013R\u001e\u0010¢\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¢\u0001\u0010\u0011\u001a\u0005\b£\u0001\u0010\u0013R\u001e\u0010¤\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¤\u0001\u0010\u0011\u001a\u0005\b¥\u0001\u0010\u0013R\u001e\u0010¦\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¦\u0001\u0010\u0011\u001a\u0005\b§\u0001\u0010\u0013R\u001e\u0010¨\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¨\u0001\u0010\u0011\u001a\u0005\b©\u0001\u0010\u0013R\u001e\u0010ª\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bª\u0001\u0010\u0011\u001a\u0005\b«\u0001\u0010\u0013R\u001e\u0010¬\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¬\u0001\u0010\u0011\u001a\u0005\b\u00ad\u0001\u0010\u0013R\u001e\u0010®\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b®\u0001\u0010\u0011\u001a\u0005\b¯\u0001\u0010\u0013R\u001e\u0010°\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b°\u0001\u0010\u0011\u001a\u0005\b±\u0001\u0010\u0013R\u001e\u0010²\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b²\u0001\u0010\u0011\u001a\u0005\b³\u0001\u0010\u0013R\u001e\u0010´\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b´\u0001\u0010\u0011\u001a\u0005\bµ\u0001\u0010\u0013R\u001e\u0010¶\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¶\u0001\u0010\u0011\u001a\u0005\b·\u0001\u0010\u0013R\u001e\u0010¸\u0001\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b¸\u0001\u0010E\u001a\u0005\b¹\u0001\u0010GR\u001e\u0010º\u0001\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\bº\u0001\u0010E\u001a\u0005\b»\u0001\u0010GR!\u0010¼\u0001\u001a\u0005\u0018\u00010\u0083\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\b¼\u0001\u0010\u0085\u0001\u001a\u0006\b½\u0001\u0010\u0087\u0001R\u001e\u0010¾\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¾\u0001\u0010\u0011\u001a\u0005\b¿\u0001\u0010\u0013R\u001e\u0010À\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÀ\u0001\u0010\u0011\u001a\u0005\bÁ\u0001\u0010\u0013R\u001e\u0010Â\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÂ\u0001\u0010\u0011\u001a\u0005\bÃ\u0001\u0010\u0013R\u001e\u0010Ä\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÄ\u0001\u0010\u0011\u001a\u0005\bÅ\u0001\u0010\u0013R\u001e\u0010Æ\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÆ\u0001\u0010\u0011\u001a\u0005\bÇ\u0001\u0010\u0013R\u001e\u0010È\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÈ\u0001\u0010\u0011\u001a\u0005\bÉ\u0001\u0010\u0013R\u001e\u0010Ê\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÊ\u0001\u0010\u0011\u001a\u0005\bË\u0001\u0010\u0013R\u001e\u0010Ì\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÌ\u0001\u0010\u0011\u001a\u0005\bÍ\u0001\u0010\u0013R\u001e\u0010Î\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÎ\u0001\u0010\u0011\u001a\u0005\bÏ\u0001\u0010\u0013R\u001e\u0010Ð\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÐ\u0001\u0010\u0011\u001a\u0005\bÑ\u0001\u0010\u0013R\u001e\u0010Ò\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÒ\u0001\u0010\u0011\u001a\u0005\bÓ\u0001\u0010\u0013R\u001e\u0010Ô\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÔ\u0001\u0010\u0011\u001a\u0005\bÕ\u0001\u0010\u0013R\u001e\u0010Ö\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÖ\u0001\u0010\u0011\u001a\u0005\b×\u0001\u0010\u0013R\u001e\u0010Ø\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bØ\u0001\u0010\u0011\u001a\u0005\bÙ\u0001\u0010\u0013R\u001e\u0010Ú\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÚ\u0001\u0010\u0011\u001a\u0005\bÛ\u0001\u0010\u0013R'\u0010Ý\u0001\u001a\u000b\u0012\u0004\u0012\u00020C\u0018\u00010Ü\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\bÝ\u0001\u0010Þ\u0001\u001a\u0006\bß\u0001\u0010à\u0001R\u001e\u0010á\u0001\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\bá\u0001\u0010E\u001a\u0005\bâ\u0001\u0010GR\u001e\u0010ã\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bã\u0001\u0010\u0011\u001a\u0005\bä\u0001\u0010\u0013R\u001e\u0010å\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bå\u0001\u0010\u0011\u001a\u0005\bæ\u0001\u0010\u0013R\u001e\u0010ç\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bç\u0001\u0010\u0011\u001a\u0005\bè\u0001\u0010\u0013R\u001e\u0010é\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bé\u0001\u0010\u0011\u001a\u0005\bê\u0001\u0010\u0013R\u001e\u0010ë\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bë\u0001\u0010\u0011\u001a\u0005\bì\u0001\u0010\u0013R\u001e\u0010í\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bí\u0001\u0010\u0011\u001a\u0005\bî\u0001\u0010\u0013R\u001e\u0010ï\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bï\u0001\u0010\u0011\u001a\u0005\bð\u0001\u0010\u0013R\u001e\u0010ñ\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bñ\u0001\u0010\u0011\u001a\u0005\bò\u0001\u0010\u0013R\u001e\u0010ó\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bó\u0001\u0010\u0011\u001a\u0005\bô\u0001\u0010\u0013R\u001e\u0010õ\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bõ\u0001\u0010\u0011\u001a\u0005\bö\u0001\u0010\u0013R\u001e\u0010÷\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b÷\u0001\u0010\u0011\u001a\u0005\bø\u0001\u0010\u0013R\u001e\u0010ù\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bù\u0001\u0010\u0011\u001a\u0005\bú\u0001\u0010\u0013R\u001e\u0010û\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bû\u0001\u0010\u0011\u001a\u0005\bü\u0001\u0010\u0013R\u001e\u0010ý\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bý\u0001\u0010\u0011\u001a\u0005\bþ\u0001\u0010\u0013R\u001e\u0010ÿ\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÿ\u0001\u0010\u0011\u001a\u0005\b\u0080\u0002\u0010\u0013R\u001e\u0010\u0081\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0081\u0002\u0010\u0011\u001a\u0005\b\u0082\u0002\u0010\u0013R\u001e\u0010\u0083\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0083\u0002\u0010\u0011\u001a\u0005\b\u0084\u0002\u0010\u0013R\u001e\u0010\u0085\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0085\u0002\u0010E\u001a\u0005\b\u0086\u0002\u0010GR\u001e\u0010\u0087\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0087\u0002\u0010\u0011\u001a\u0005\b\u0088\u0002\u0010\u0013R\u001e\u0010\u0089\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0089\u0002\u0010\u0011\u001a\u0005\b\u008a\u0002\u0010\u0013R\u001e\u0010\u008b\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008b\u0002\u0010E\u001a\u0005\b\u008c\u0002\u0010GR\u001e\u0010\u008d\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008d\u0002\u0010\u0011\u001a\u0005\b\u008e\u0002\u0010\u0013R\u001e\u0010\u008f\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008f\u0002\u0010\u0011\u001a\u0005\b\u0090\u0002\u0010\u0013R\u001e\u0010\u0091\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0091\u0002\u0010\u0011\u001a\u0005\b\u0092\u0002\u0010\u0013R\u001e\u0010\u0093\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0093\u0002\u0010\u0011\u001a\u0005\b\u0094\u0002\u0010\u0013R\u001e\u0010\u0095\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0095\u0002\u0010\u0011\u001a\u0005\b\u0096\u0002\u0010\u0013R\u001e\u0010\u0097\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0097\u0002\u0010\u0011\u001a\u0005\b\u0098\u0002\u0010\u0013R\u001e\u0010\u0099\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0099\u0002\u0010\u0011\u001a\u0005\b\u009a\u0002\u0010\u0013R\u001e\u0010\u009b\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009b\u0002\u0010\u0011\u001a\u0005\b\u009c\u0002\u0010\u0013R\u001e\u0010\u009d\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009d\u0002\u0010E\u001a\u0005\b\u009e\u0002\u0010GR!\u0010\u009f\u0002\u001a\u0005\u0018\u00010\u0083\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\b\u009f\u0002\u0010\u0085\u0001\u001a\u0006\b \u0002\u0010\u0087\u0001R\u001e\u0010¡\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¡\u0002\u0010\u0011\u001a\u0005\b¢\u0002\u0010\u0013R\u001e\u0010£\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b£\u0002\u0010\u0011\u001a\u0005\b¤\u0002\u0010\u0013R\u001e\u0010¥\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¥\u0002\u0010\u0011\u001a\u0005\b¦\u0002\u0010\u0013R\u001e\u0010§\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b§\u0002\u0010E\u001a\u0005\b¨\u0002\u0010GR\u001e\u0010©\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b©\u0002\u0010\u0011\u001a\u0005\bª\u0002\u0010\u0013R\u001e\u0010«\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b«\u0002\u0010\u0011\u001a\u0005\b¬\u0002\u0010\u0013R\u001e\u0010\u00ad\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u00ad\u0002\u0010E\u001a\u0005\b®\u0002\u0010GR\u001e\u0010¯\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¯\u0002\u0010\u0011\u001a\u0005\b°\u0002\u0010\u0013R\u001e\u0010±\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b±\u0002\u0010\u0011\u001a\u0005\b²\u0002\u0010\u0013R\u001e\u0010³\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b³\u0002\u0010\u0011\u001a\u0005\b´\u0002\u0010\u0013R\u001e\u0010µ\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bµ\u0002\u0010\u0011\u001a\u0005\b¶\u0002\u0010\u0013R\u001e\u0010·\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b·\u0002\u0010\u0011\u001a\u0005\b¸\u0002\u0010\u0013R\u001e\u0010¹\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b¹\u0002\u0010\u0011\u001a\u0005\bº\u0002\u0010\u0013R,\u0010¼\u0002\u001a\u0005\u0018\u00010»\u00028\u0016@\u0016X\u0096\u000e¢\u0006\u0018\n\u0006\b¼\u0002\u0010½\u0002\u001a\u0006\b¾\u0002\u0010¿\u0002\"\u0006\bÀ\u0002\u0010Á\u0002R\u001e\u0010Â\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\bÂ\u0002\u0010E\u001a\u0005\bÃ\u0002\u0010GR\u001e\u0010Ä\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÄ\u0002\u0010\u0011\u001a\u0005\bÅ\u0002\u0010\u0013R\u001e\u0010Æ\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÆ\u0002\u0010\u0011\u001a\u0005\bÇ\u0002\u0010\u0013R\u001e\u0010È\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÈ\u0002\u0010\u0011\u001a\u0005\bÉ\u0002\u0010\u0013R\u001e\u0010Ê\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÊ\u0002\u0010\u0011\u001a\u0005\bË\u0002\u0010\u0013R\u001e\u0010Ì\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÌ\u0002\u0010\u0011\u001a\u0005\bÍ\u0002\u0010\u0013R!\u0010Î\u0002\u001a\u0005\u0018\u00010\u0083\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\bÎ\u0002\u0010\u0085\u0001\u001a\u0006\bÏ\u0002\u0010\u0087\u0001R\u001e\u0010Ð\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\bÐ\u0002\u0010E\u001a\u0005\bÑ\u0002\u0010GR\u001e\u0010Ò\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÒ\u0002\u0010\u0011\u001a\u0005\bÓ\u0002\u0010\u0013R\u001e\u0010Ô\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÔ\u0002\u0010\u0011\u001a\u0005\bÕ\u0002\u0010\u0013R\u001e\u0010Ö\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÖ\u0002\u0010\u0011\u001a\u0005\b×\u0002\u0010\u0013R\u001e\u0010Ø\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bØ\u0002\u0010\u0011\u001a\u0005\bÙ\u0002\u0010\u0013R\u001e\u0010Ú\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÚ\u0002\u0010\u0011\u001a\u0005\bÛ\u0002\u0010\u0013R\u001e\u0010Ü\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÜ\u0002\u0010\u0011\u001a\u0005\bÝ\u0002\u0010\u0013R\u001e\u0010Þ\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÞ\u0002\u0010\u0011\u001a\u0005\bß\u0002\u0010\u0013R\u001e\u0010à\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bà\u0002\u0010\u0011\u001a\u0005\bá\u0002\u0010\u0013R\u001e\u0010â\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bâ\u0002\u0010\u0011\u001a\u0005\bã\u0002\u0010\u0013R\u001e\u0010ä\u0002\u001a\u0004\u0018\u00010C8\u0006@\u0006¢\u0006\u000e\n\u0005\bä\u0002\u0010E\u001a\u0005\bå\u0002\u0010GR\u001e\u0010æ\u0002\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bæ\u0002\u0010\u0011\u001a\u0005\bç\u0002\u0010\u0013R!\u0010è\u0002\u001a\u0005\u0018\u00010\u0083\u00018\u0006@\u0006¢\u0006\u0010\n\u0006\bè\u0002\u0010\u0085\u0001\u001a\u0006\bé\u0002\u0010\u0087\u0001¨\u0006ê\u0002"}, d2 = {"Lcom/discord/analytics/generated/events/TrackVideoStreamEnded;", "Lcom/discord/api/science/AnalyticsSchema;", "Lcom/discord/analytics/generated/traits/TrackBaseReceiver;", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurationsReceiver;", "", "toString", "()Ljava/lang/String;", "", "hashCode", "()I", "", "other", "", "equals", "(Ljava/lang/Object;)Z", "", "durationEncoderVideotoolbox", "Ljava/lang/Long;", "getDurationEncoderVideotoolbox", "()Ljava/lang/Long;", "resolutionPercentile10", "getResolutionPercentile10", "numFrames", "getNumFrames", "soundshareStateTransitionStartedCount", "getSoundshareStateTransitionStartedCount", "durationAggregation", "getDurationAggregation", "durationFpsUnder50", "getDurationFpsUnder50", "analyticsSchemaTypeName", "Ljava/lang/String;", "d", "soundshareMalformedTraceCount", "getSoundshareMalformedTraceCount", "targetBitrateNetwork", "getTargetBitrateNetwork", "durationPaused", "getDurationPaused", "durationFpsUnder5", "getDurationFpsUnder5", "maxViewers", "getMaxViewers", "fpsPercentile10", "getFpsPercentile10", "durationFpsUnder60", "getDurationFpsUnder60", "durationFpsUnder35", "getDurationFpsUnder35", "durationStreamUnder7mbps", "getDurationStreamUnder7mbps", "durationLayoutLandscape", "getDurationLayoutLandscape", "soundshareAudioDetectedCount", "getSoundshareAudioDetectedCount", "durationFpsUnder40", "getDurationFpsUnder40", "durationFpsUnder10", "getDurationFpsUnder10", "soundshareCaptureStoppedCount", "getSoundshareCaptureStoppedCount", "soundshareStateTransitionSilenceCount", "getSoundshareStateTransitionSilenceCount", "streamSettingsChanged", "Ljava/lang/Boolean;", "getStreamSettingsChanged", "()Ljava/lang/Boolean;", "", "voiceBackendVersion", "Ljava/lang/CharSequence;", "getVoiceBackendVersion", "()Ljava/lang/CharSequence;", "fpsPercentile75", "getFpsPercentile75", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "trackNetworkInformationDurations", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "getTrackNetworkInformationDurations", "()Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "setTrackNetworkInformationDurations", "(Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;)V", "shareApplicationName", "getShareApplicationName", "timeToFirstFrameMs", "getTimeToFirstFrameMs", "soundshareRecvStartedCount", "getSoundshareRecvStartedCount", "soundshareCapturingCount", "getSoundshareCapturingCount", "durationEncoderIntelDirect3d", "getDurationEncoderIntelDirect3d", "receiverTotalFramesDuration", "getReceiverTotalFramesDuration", "numFramesReceived", "getNumFramesReceived", "numPacketsReceived", "getNumPacketsReceived", "numLayoutChanges", "getNumLayoutChanges", "soundshareSendStopCount", "getSoundshareSendStopCount", "durationEncoderAmdDirect3d", "getDurationEncoderAmdDirect3d", "soundshareStateTransitionAttachedCount", "getSoundshareStateTransitionAttachedCount", "resolutionPercentile5", "getResolutionPercentile5", "avgFps", "getAvgFps", "durationLayoutPortrait", "getDurationLayoutPortrait", "numFramesDropped", "getNumFramesDropped", "durationStreamUnder5mbps", "getDurationStreamUnder5mbps", "soundshareRecvConnectCount", "getSoundshareRecvConnectCount", "numNacks", "getNumNacks", "soundshareUniquePids", "getSoundshareUniquePids", "bitratePercentile1", "getBitratePercentile1", "parentMediaSessionId", "getParentMediaSessionId", "context", "getContext", "durationResolutionUnder720", "getDurationResolutionUnder720", "numPacketsLost", "getNumPacketsLost", "", "clientPerformanceCpuPercentile95", "Ljava/lang/Float;", "getClientPerformanceCpuPercentile95", "()Ljava/lang/Float;", "resolutionPercentile50", "getResolutionPercentile50", "soundshareUnknownEventCount", "getSoundshareUnknownEventCount", "soundshareStateTransitionPlayingCount", "getSoundshareStateTransitionPlayingCount", "soundshareFirstPid", "getSoundshareFirstPid", "lastQuality", "getLastQuality", "numPauses", "getNumPauses", "durationFpsUnder20", "getDurationFpsUnder20", "durationEncoderNvidiaCuda", "getDurationEncoderNvidiaCuda", "durationFpsUnder45", "getDurationFpsUnder45", "quality", "getQuality", "durationResolutionUnder360", "getDurationResolutionUnder360", "clientPerformanceMemoryMax", "getClientPerformanceMemoryMax", "resolutionPercentile75", "getResolutionPercentile75", "durationLayoutPopout", "getDurationLayoutPopout", "numBytesReceived", "getNumBytesReceived", "avgResolution", "getAvgResolution", "soundshareRecvFormatCount", "getSoundshareRecvFormatCount", "targetBitrateMax", "getTargetBitrateMax", "durationFpsUnder15", "getDurationFpsUnder15", "fpsPercentile25", "getFpsPercentile25", "durationVideoEffect", "getDurationVideoEffect", "targetFps", "getTargetFps", "durationStreamUnder4mbps", "getDurationStreamUnder4mbps", "channelId", "getChannelId", "shareApplicationExecutable", "getShareApplicationExecutable", "soundshareLastSession", "getSoundshareLastSession", "clientPerformanceCpuPercentile90", "getClientPerformanceCpuPercentile90", "clientPerformanceMemoryMin", "getClientPerformanceMemoryMin", "receiverTotalFreezesDuration", "getReceiverTotalFreezesDuration", "durationLayoutPip", "getDurationLayoutPip", "numPlis", "getNumPlis", "durationLayoutMinimized", "getDurationLayoutMinimized", "soundshareSendStartCount", "getSoundshareSendStartCount", "targetResolutionHeight", "getTargetResolutionHeight", "durationStreamUnder15mbps", "getDurationStreamUnder15mbps", "durationResolutionUnder480", "getDurationResolutionUnder480", "soundshareLastPid", "getSoundshareLastPid", "durationVideoStopped", "getDurationVideoStopped", "receiverFreezeCount", "getReceiverFreezeCount", "bitratePercentile10", "getBitratePercentile10", "durationEncoderUnknown", "getDurationEncoderUnknown", "clientPerformanceMemoryPercentile50", "getClientPerformanceMemoryPercentile50", "", "streamApplicationName", "Ljava/util/List;", "getStreamApplicationName", "()Ljava/util/List;", "rtcWorkerBackendVersion", "getRtcWorkerBackendVersion", "clientPerformanceMemoryPercentile90", "getClientPerformanceMemoryPercentile90", "durationStreamUnder8mbps", "getDurationStreamUnder8mbps", "durationEncoderIntel", "getDurationEncoderIntel", "numPackets", "getNumPackets", "receiverPauseCount", "getReceiverPauseCount", "soundshareHookedCount", "getSoundshareHookedCount", "soundshareStateTransitionDetachedCount", "getSoundshareStateTransitionDetachedCount", "duration", "getDuration", "soundshareRecvStoppedCount", "getSoundshareRecvStoppedCount", "clientPerformanceMemoryPercentile25", "getClientPerformanceMemoryPercentile25", "durationFpsUnder55", "getDurationFpsUnder55", "bitratePercentile25", "getBitratePercentile25", "durationStoppedReceiving", "getDurationStoppedReceiving", "bitratePercentile75", "getBitratePercentile75", "bitratePercentile50", "getBitratePercentile50", "senderUserId", "getSenderUserId", "durationStreamUnder05mbps", "getDurationStreamUnder05mbps", "soundshareFirstSession", "getSoundshareFirstSession", "durationEncoderNvidiaVideotoolbox", "getDurationEncoderNvidiaVideotoolbox", "targetBitrate", "getTargetBitrate", "streamRegion", "getStreamRegion", "durationEncoderOpenh264", "getDurationEncoderOpenh264", "soundshareRecvFailedCount", "getSoundshareRecvFailedCount", "resolutionPercentile1", "getResolutionPercentile1", "clientPerformanceMemoryPercentile95", "getClientPerformanceMemoryPercentile95", "durationFpsAt0", "getDurationFpsAt0", "fpsPercentile1", "getFpsPercentile1", "durationStreamUnder2mbps", "getDurationStreamUnder2mbps", "durationLayoutTheatre", "getDurationLayoutTheatre", "participantType", "getParticipantType", "clientPerformanceCpuPercentile25", "getClientPerformanceCpuPercentile25", "fpsPercentile5", "getFpsPercentile5", "numQualityChanges", "getNumQualityChanges", "clientPerformanceMemoryPercentile75", "getClientPerformanceMemoryPercentile75", ModelAuditLogEntry.CHANGE_KEY_REASON, "getReason", "durationFpsUnder25", "getDurationFpsUnder25", "bitratePercentile5", "getBitratePercentile5", "videoLayout", "getVideoLayout", "guildId", "getGuildId", "durationEncoderNvidiaOpenh264", "getDurationEncoderNvidiaOpenh264", "qpSum", "getQpSum", "durationEncoderNvidiaDirect3d", "getDurationEncoderNvidiaDirect3d", "durationLayoutFullscreen", "getDurationLayoutFullscreen", "shareApplicationId", "getShareApplicationId", "Lcom/discord/analytics/generated/traits/TrackBase;", "trackBase", "Lcom/discord/analytics/generated/traits/TrackBase;", "getTrackBase", "()Lcom/discord/analytics/generated/traits/TrackBase;", "setTrackBase", "(Lcom/discord/analytics/generated/traits/TrackBase;)V", "guildRegion", "getGuildRegion", "durationFpsUnder30", "getDurationFpsUnder30", "resolutionPercentile25", "getResolutionPercentile25", "durationZeroReceivers", "getDurationZeroReceivers", "durationStreamUnder6mbps", "getDurationStreamUnder6mbps", "receiverTotalPausesDuration", "getReceiverTotalPausesDuration", "clientPerformanceCpuPercentile50", "getClientPerformanceCpuPercentile50", "mediaSessionId", "getMediaSessionId", "soundshareRecvDisconnectCount", "getSoundshareRecvDisconnectCount", "soundshareStateTransitionWaitingCount", "getSoundshareStateTransitionWaitingCount", "fpsPercentile50", "getFpsPercentile50", "durationStreamUnder1mbps", "getDurationStreamUnder1mbps", "durationStreamAt0mbps", "getDurationStreamAt0mbps", "durationStreamUnder3mbps", "getDurationStreamUnder3mbps", "soundshareAttachRequestedCount", "getSoundshareAttachRequestedCount", "numBytes", "getNumBytes", "soundshareSendAnnounceCount", "getSoundshareSendAnnounceCount", "rtcConnectionId", "getRtcConnectionId", "avgBitrate", "getAvgBitrate", "clientPerformanceCpuPercentile75", "getClientPerformanceCpuPercentile75", "analytics_release"}, k = 1, mv = {1, 4, 2})
/* loaded from: classes.dex */
public final /* data */ class TrackVideoStreamEnded implements AnalyticsSchema, TrackBase2, TrackNetworkInformationDurations2 {
    private TrackBase trackBase;
    private TrackNetworkInformationDurations trackNetworkInformationDurations;
    private final Long guildId = null;
    private final Long channelId = null;
    private final CharSequence rtcConnectionId = null;
    private final CharSequence mediaSessionId = null;
    private final CharSequence parentMediaSessionId = null;
    private final CharSequence context = null;
    private final Long senderUserId = null;
    private final Long duration = null;
    private final Long numBytesReceived = null;
    private final Long numBytes = null;
    private final Long numPacketsLost = null;
    private final Long numPacketsReceived = null;
    private final Long numPackets = null;
    private final Long numFramesDropped = null;
    private final Long numFramesReceived = null;
    private final Long numFrames = null;
    private final Long numQualityChanges = null;
    private final Long numPauses = null;
    private final Long numNacks = null;
    private final Long numPlis = null;
    private final Long durationPaused = null;
    private final CharSequence lastQuality = null;
    private final CharSequence reason = null;
    private final CharSequence participantType = null;
    private final CharSequence shareApplicationName = null;
    private final Long shareApplicationId = null;
    private final CharSequence shareApplicationExecutable = null;
    private final List<CharSequence> streamApplicationName = null;
    private final CharSequence streamRegion = null;
    private final CharSequence guildRegion = null;
    private final Long maxViewers = null;
    private final Long avgBitrate = null;
    private final Long targetBitrate = null;
    private final Long targetBitrateMax = null;
    private final Long targetBitrateNetwork = null;
    private final Long targetFps = null;
    private final Long targetResolutionHeight = null;
    private final Long durationStreamUnder8mbps = null;
    private final Long durationStreamUnder7mbps = null;
    private final Long durationStreamUnder6mbps = null;
    private final Long durationStreamUnder5mbps = null;
    private final Long durationStreamUnder4mbps = null;
    private final Long durationStreamUnder3mbps = null;
    private final Long durationStreamUnder2mbps = null;
    private final Long durationStreamUnder15mbps = null;
    private final Long durationStreamUnder1mbps = null;
    private final Long durationStreamUnder05mbps = null;
    private final Long durationStreamAt0mbps = null;
    private final Long avgFps = null;
    private final Long durationFpsUnder60 = null;
    private final Long durationFpsUnder55 = null;
    private final Long durationFpsUnder50 = null;
    private final Long durationFpsUnder45 = null;
    private final Long durationFpsUnder40 = null;
    private final Long durationFpsUnder35 = null;
    private final Long durationFpsUnder30 = null;
    private final Long durationFpsUnder25 = null;
    private final Long durationFpsUnder20 = null;
    private final Long durationFpsUnder15 = null;
    private final Long durationFpsUnder10 = null;
    private final Long durationFpsUnder5 = null;
    private final Long durationFpsAt0 = null;
    private final Long avgResolution = null;
    private final Long durationResolutionUnder720 = null;
    private final Long durationResolutionUnder480 = null;
    private final Long durationResolutionUnder360 = null;
    private final CharSequence videoLayout = null;
    private final Long numLayoutChanges = null;
    private final Long durationLayoutTheatre = null;
    private final Long durationLayoutPip = null;
    private final Long durationLayoutFullscreen = null;
    private final Long durationLayoutPopout = null;
    private final Long durationLayoutPortrait = null;
    private final Long durationLayoutLandscape = null;
    private final Long durationLayoutMinimized = null;
    private final Long timeToFirstFrameMs = null;
    private final Long soundshareAttachRequestedCount = null;
    private final Long soundshareCapturingCount = null;
    private final Long soundshareCaptureStoppedCount = null;
    private final Long soundshareHookedCount = null;
    private final Long soundshareRecvConnectCount = null;
    private final Long soundshareRecvDisconnectCount = null;
    private final Long soundshareRecvStartedCount = null;
    private final Long soundshareRecvStoppedCount = null;
    private final Long soundshareRecvFailedCount = null;
    private final Long soundshareRecvFormatCount = null;
    private final Long soundshareSendAnnounceCount = null;
    private final Long soundshareSendStartCount = null;
    private final Long soundshareSendStopCount = null;
    private final Long soundshareMalformedTraceCount = null;
    private final Long soundshareAudioDetectedCount = null;
    private final Long soundshareStateTransitionDetachedCount = null;
    private final Long soundshareStateTransitionWaitingCount = null;
    private final Long soundshareStateTransitionAttachedCount = null;
    private final Long soundshareStateTransitionStartedCount = null;
    private final Long soundshareStateTransitionPlayingCount = null;
    private final Long soundshareStateTransitionSilenceCount = null;
    private final Long soundshareUnknownEventCount = null;
    private final Long soundshareFirstPid = null;
    private final Long soundshareLastPid = null;
    private final Long soundshareUniquePids = null;
    private final CharSequence soundshareFirstSession = null;
    private final CharSequence soundshareLastSession = null;
    private final Long durationEncoderNvidiaCuda = null;
    private final Long durationEncoderNvidiaDirect3d = null;
    private final Long durationEncoderNvidiaOpenh264 = null;
    private final Long durationEncoderOpenh264 = null;
    private final Long durationEncoderNvidiaVideotoolbox = null;
    private final Long durationEncoderVideotoolbox = null;
    private final Long durationEncoderAmdDirect3d = null;
    private final Long durationEncoderIntel = null;
    private final Long durationEncoderIntelDirect3d = null;
    private final Long durationEncoderUnknown = null;
    private final Boolean streamSettingsChanged = null;
    private final Long durationZeroReceivers = null;
    private final Long durationVideoStopped = null;
    private final Long durationVideoEffect = null;
    private final Long quality = null;
    private final Long qpSum = null;
    private final Float clientPerformanceCpuPercentile25 = null;
    private final Float clientPerformanceCpuPercentile50 = null;
    private final Float clientPerformanceCpuPercentile75 = null;
    private final Float clientPerformanceCpuPercentile90 = null;
    private final Float clientPerformanceCpuPercentile95 = null;
    private final Long clientPerformanceMemoryPercentile25 = null;
    private final Long clientPerformanceMemoryPercentile50 = null;
    private final Long clientPerformanceMemoryPercentile75 = null;
    private final Long clientPerformanceMemoryPercentile90 = null;
    private final Long clientPerformanceMemoryPercentile95 = null;
    private final Long clientPerformanceMemoryMin = null;
    private final Long clientPerformanceMemoryMax = null;
    private final CharSequence voiceBackendVersion = null;
    private final CharSequence rtcWorkerBackendVersion = null;
    private final Long durationAggregation = null;
    private final Long durationStoppedReceiving = null;
    private final Long receiverPauseCount = null;
    private final Long receiverFreezeCount = null;
    private final Long receiverTotalPausesDuration = null;
    private final Long receiverTotalFreezesDuration = null;
    private final Long receiverTotalFramesDuration = null;
    private final Long fpsPercentile1 = null;
    private final Long fpsPercentile5 = null;
    private final Long fpsPercentile10 = null;
    private final Long fpsPercentile25 = null;
    private final Long fpsPercentile50 = null;
    private final Long fpsPercentile75 = null;
    private final Long bitratePercentile1 = null;
    private final Long bitratePercentile5 = null;
    private final Long bitratePercentile10 = null;
    private final Long bitratePercentile25 = null;
    private final Long bitratePercentile50 = null;
    private final Long bitratePercentile75 = null;
    private final Long resolutionPercentile1 = null;
    private final Long resolutionPercentile5 = null;
    private final Long resolutionPercentile10 = null;
    private final Long resolutionPercentile25 = null;
    private final Long resolutionPercentile50 = null;
    private final Long resolutionPercentile75 = null;
    private final transient String analyticsSchemaTypeName = "video_stream_ended";

    @Override // com.discord.api.science.AnalyticsSchema
    /* renamed from: d, reason: from getter */
    public String getAnalyticsSchemaTypeName() {
        return this.analyticsSchemaTypeName;
    }

    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (!(other instanceof TrackVideoStreamEnded)) {
            return false;
        }
        TrackVideoStreamEnded trackVideoStreamEnded = (TrackVideoStreamEnded) other;
        return Intrinsics3.areEqual(this.guildId, trackVideoStreamEnded.guildId) && Intrinsics3.areEqual(this.channelId, trackVideoStreamEnded.channelId) && Intrinsics3.areEqual(this.rtcConnectionId, trackVideoStreamEnded.rtcConnectionId) && Intrinsics3.areEqual(this.mediaSessionId, trackVideoStreamEnded.mediaSessionId) && Intrinsics3.areEqual(this.parentMediaSessionId, trackVideoStreamEnded.parentMediaSessionId) && Intrinsics3.areEqual(this.context, trackVideoStreamEnded.context) && Intrinsics3.areEqual(this.senderUserId, trackVideoStreamEnded.senderUserId) && Intrinsics3.areEqual(this.duration, trackVideoStreamEnded.duration) && Intrinsics3.areEqual(this.numBytesReceived, trackVideoStreamEnded.numBytesReceived) && Intrinsics3.areEqual(this.numBytes, trackVideoStreamEnded.numBytes) && Intrinsics3.areEqual(this.numPacketsLost, trackVideoStreamEnded.numPacketsLost) && Intrinsics3.areEqual(this.numPacketsReceived, trackVideoStreamEnded.numPacketsReceived) && Intrinsics3.areEqual(this.numPackets, trackVideoStreamEnded.numPackets) && Intrinsics3.areEqual(this.numFramesDropped, trackVideoStreamEnded.numFramesDropped) && Intrinsics3.areEqual(this.numFramesReceived, trackVideoStreamEnded.numFramesReceived) && Intrinsics3.areEqual(this.numFrames, trackVideoStreamEnded.numFrames) && Intrinsics3.areEqual(this.numQualityChanges, trackVideoStreamEnded.numQualityChanges) && Intrinsics3.areEqual(this.numPauses, trackVideoStreamEnded.numPauses) && Intrinsics3.areEqual(this.numNacks, trackVideoStreamEnded.numNacks) && Intrinsics3.areEqual(this.numPlis, trackVideoStreamEnded.numPlis) && Intrinsics3.areEqual(this.durationPaused, trackVideoStreamEnded.durationPaused) && Intrinsics3.areEqual(this.lastQuality, trackVideoStreamEnded.lastQuality) && Intrinsics3.areEqual(this.reason, trackVideoStreamEnded.reason) && Intrinsics3.areEqual(this.participantType, trackVideoStreamEnded.participantType) && Intrinsics3.areEqual(this.shareApplicationName, trackVideoStreamEnded.shareApplicationName) && Intrinsics3.areEqual(this.shareApplicationId, trackVideoStreamEnded.shareApplicationId) && Intrinsics3.areEqual(this.shareApplicationExecutable, trackVideoStreamEnded.shareApplicationExecutable) && Intrinsics3.areEqual(this.streamApplicationName, trackVideoStreamEnded.streamApplicationName) && Intrinsics3.areEqual(this.streamRegion, trackVideoStreamEnded.streamRegion) && Intrinsics3.areEqual(this.guildRegion, trackVideoStreamEnded.guildRegion) && Intrinsics3.areEqual(this.maxViewers, trackVideoStreamEnded.maxViewers) && Intrinsics3.areEqual(this.avgBitrate, trackVideoStreamEnded.avgBitrate) && Intrinsics3.areEqual(this.targetBitrate, trackVideoStreamEnded.targetBitrate) && Intrinsics3.areEqual(this.targetBitrateMax, trackVideoStreamEnded.targetBitrateMax) && Intrinsics3.areEqual(this.targetBitrateNetwork, trackVideoStreamEnded.targetBitrateNetwork) && Intrinsics3.areEqual(this.targetFps, trackVideoStreamEnded.targetFps) && Intrinsics3.areEqual(this.targetResolutionHeight, trackVideoStreamEnded.targetResolutionHeight) && Intrinsics3.areEqual(this.durationStreamUnder8mbps, trackVideoStreamEnded.durationStreamUnder8mbps) && Intrinsics3.areEqual(this.durationStreamUnder7mbps, trackVideoStreamEnded.durationStreamUnder7mbps) && Intrinsics3.areEqual(this.durationStreamUnder6mbps, trackVideoStreamEnded.durationStreamUnder6mbps) && Intrinsics3.areEqual(this.durationStreamUnder5mbps, trackVideoStreamEnded.durationStreamUnder5mbps) && Intrinsics3.areEqual(this.durationStreamUnder4mbps, trackVideoStreamEnded.durationStreamUnder4mbps) && Intrinsics3.areEqual(this.durationStreamUnder3mbps, trackVideoStreamEnded.durationStreamUnder3mbps) && Intrinsics3.areEqual(this.durationStreamUnder2mbps, trackVideoStreamEnded.durationStreamUnder2mbps) && Intrinsics3.areEqual(this.durationStreamUnder15mbps, trackVideoStreamEnded.durationStreamUnder15mbps) && Intrinsics3.areEqual(this.durationStreamUnder1mbps, trackVideoStreamEnded.durationStreamUnder1mbps) && Intrinsics3.areEqual(this.durationStreamUnder05mbps, trackVideoStreamEnded.durationStreamUnder05mbps) && Intrinsics3.areEqual(this.durationStreamAt0mbps, trackVideoStreamEnded.durationStreamAt0mbps) && Intrinsics3.areEqual(this.avgFps, trackVideoStreamEnded.avgFps) && Intrinsics3.areEqual(this.durationFpsUnder60, trackVideoStreamEnded.durationFpsUnder60) && Intrinsics3.areEqual(this.durationFpsUnder55, trackVideoStreamEnded.durationFpsUnder55) && Intrinsics3.areEqual(this.durationFpsUnder50, trackVideoStreamEnded.durationFpsUnder50) && Intrinsics3.areEqual(this.durationFpsUnder45, trackVideoStreamEnded.durationFpsUnder45) && Intrinsics3.areEqual(this.durationFpsUnder40, trackVideoStreamEnded.durationFpsUnder40) && Intrinsics3.areEqual(this.durationFpsUnder35, trackVideoStreamEnded.durationFpsUnder35) && Intrinsics3.areEqual(this.durationFpsUnder30, trackVideoStreamEnded.durationFpsUnder30) && Intrinsics3.areEqual(this.durationFpsUnder25, trackVideoStreamEnded.durationFpsUnder25) && Intrinsics3.areEqual(this.durationFpsUnder20, trackVideoStreamEnded.durationFpsUnder20) && Intrinsics3.areEqual(this.durationFpsUnder15, trackVideoStreamEnded.durationFpsUnder15) && Intrinsics3.areEqual(this.durationFpsUnder10, trackVideoStreamEnded.durationFpsUnder10) && Intrinsics3.areEqual(this.durationFpsUnder5, trackVideoStreamEnded.durationFpsUnder5) && Intrinsics3.areEqual(this.durationFpsAt0, trackVideoStreamEnded.durationFpsAt0) && Intrinsics3.areEqual(this.avgResolution, trackVideoStreamEnded.avgResolution) && Intrinsics3.areEqual(this.durationResolutionUnder720, trackVideoStreamEnded.durationResolutionUnder720) && Intrinsics3.areEqual(this.durationResolutionUnder480, trackVideoStreamEnded.durationResolutionUnder480) && Intrinsics3.areEqual(this.durationResolutionUnder360, trackVideoStreamEnded.durationResolutionUnder360) && Intrinsics3.areEqual(this.videoLayout, trackVideoStreamEnded.videoLayout) && Intrinsics3.areEqual(this.numLayoutChanges, trackVideoStreamEnded.numLayoutChanges) && Intrinsics3.areEqual(this.durationLayoutTheatre, trackVideoStreamEnded.durationLayoutTheatre) && Intrinsics3.areEqual(this.durationLayoutPip, trackVideoStreamEnded.durationLayoutPip) && Intrinsics3.areEqual(this.durationLayoutFullscreen, trackVideoStreamEnded.durationLayoutFullscreen) && Intrinsics3.areEqual(this.durationLayoutPopout, trackVideoStreamEnded.durationLayoutPopout) && Intrinsics3.areEqual(this.durationLayoutPortrait, trackVideoStreamEnded.durationLayoutPortrait) && Intrinsics3.areEqual(this.durationLayoutLandscape, trackVideoStreamEnded.durationLayoutLandscape) && Intrinsics3.areEqual(this.durationLayoutMinimized, trackVideoStreamEnded.durationLayoutMinimized) && Intrinsics3.areEqual(this.timeToFirstFrameMs, trackVideoStreamEnded.timeToFirstFrameMs) && Intrinsics3.areEqual(this.soundshareAttachRequestedCount, trackVideoStreamEnded.soundshareAttachRequestedCount) && Intrinsics3.areEqual(this.soundshareCapturingCount, trackVideoStreamEnded.soundshareCapturingCount) && Intrinsics3.areEqual(this.soundshareCaptureStoppedCount, trackVideoStreamEnded.soundshareCaptureStoppedCount) && Intrinsics3.areEqual(this.soundshareHookedCount, trackVideoStreamEnded.soundshareHookedCount) && Intrinsics3.areEqual(this.soundshareRecvConnectCount, trackVideoStreamEnded.soundshareRecvConnectCount) && Intrinsics3.areEqual(this.soundshareRecvDisconnectCount, trackVideoStreamEnded.soundshareRecvDisconnectCount) && Intrinsics3.areEqual(this.soundshareRecvStartedCount, trackVideoStreamEnded.soundshareRecvStartedCount) && Intrinsics3.areEqual(this.soundshareRecvStoppedCount, trackVideoStreamEnded.soundshareRecvStoppedCount) && Intrinsics3.areEqual(this.soundshareRecvFailedCount, trackVideoStreamEnded.soundshareRecvFailedCount) && Intrinsics3.areEqual(this.soundshareRecvFormatCount, trackVideoStreamEnded.soundshareRecvFormatCount) && Intrinsics3.areEqual(this.soundshareSendAnnounceCount, trackVideoStreamEnded.soundshareSendAnnounceCount) && Intrinsics3.areEqual(this.soundshareSendStartCount, trackVideoStreamEnded.soundshareSendStartCount) && Intrinsics3.areEqual(this.soundshareSendStopCount, trackVideoStreamEnded.soundshareSendStopCount) && Intrinsics3.areEqual(this.soundshareMalformedTraceCount, trackVideoStreamEnded.soundshareMalformedTraceCount) && Intrinsics3.areEqual(this.soundshareAudioDetectedCount, trackVideoStreamEnded.soundshareAudioDetectedCount) && Intrinsics3.areEqual(this.soundshareStateTransitionDetachedCount, trackVideoStreamEnded.soundshareStateTransitionDetachedCount) && Intrinsics3.areEqual(this.soundshareStateTransitionWaitingCount, trackVideoStreamEnded.soundshareStateTransitionWaitingCount) && Intrinsics3.areEqual(this.soundshareStateTransitionAttachedCount, trackVideoStreamEnded.soundshareStateTransitionAttachedCount) && Intrinsics3.areEqual(this.soundshareStateTransitionStartedCount, trackVideoStreamEnded.soundshareStateTransitionStartedCount) && Intrinsics3.areEqual(this.soundshareStateTransitionPlayingCount, trackVideoStreamEnded.soundshareStateTransitionPlayingCount) && Intrinsics3.areEqual(this.soundshareStateTransitionSilenceCount, trackVideoStreamEnded.soundshareStateTransitionSilenceCount) && Intrinsics3.areEqual(this.soundshareUnknownEventCount, trackVideoStreamEnded.soundshareUnknownEventCount) && Intrinsics3.areEqual(this.soundshareFirstPid, trackVideoStreamEnded.soundshareFirstPid) && Intrinsics3.areEqual(this.soundshareLastPid, trackVideoStreamEnded.soundshareLastPid) && Intrinsics3.areEqual(this.soundshareUniquePids, trackVideoStreamEnded.soundshareUniquePids) && Intrinsics3.areEqual(this.soundshareFirstSession, trackVideoStreamEnded.soundshareFirstSession) && Intrinsics3.areEqual(this.soundshareLastSession, trackVideoStreamEnded.soundshareLastSession) && Intrinsics3.areEqual(this.durationEncoderNvidiaCuda, trackVideoStreamEnded.durationEncoderNvidiaCuda) && Intrinsics3.areEqual(this.durationEncoderNvidiaDirect3d, trackVideoStreamEnded.durationEncoderNvidiaDirect3d) && Intrinsics3.areEqual(this.durationEncoderNvidiaOpenh264, trackVideoStreamEnded.durationEncoderNvidiaOpenh264) && Intrinsics3.areEqual(this.durationEncoderOpenh264, trackVideoStreamEnded.durationEncoderOpenh264) && Intrinsics3.areEqual(this.durationEncoderNvidiaVideotoolbox, trackVideoStreamEnded.durationEncoderNvidiaVideotoolbox) && Intrinsics3.areEqual(this.durationEncoderVideotoolbox, trackVideoStreamEnded.durationEncoderVideotoolbox) && Intrinsics3.areEqual(this.durationEncoderAmdDirect3d, trackVideoStreamEnded.durationEncoderAmdDirect3d) && Intrinsics3.areEqual(this.durationEncoderIntel, trackVideoStreamEnded.durationEncoderIntel) && Intrinsics3.areEqual(this.durationEncoderIntelDirect3d, trackVideoStreamEnded.durationEncoderIntelDirect3d) && Intrinsics3.areEqual(this.durationEncoderUnknown, trackVideoStreamEnded.durationEncoderUnknown) && Intrinsics3.areEqual(this.streamSettingsChanged, trackVideoStreamEnded.streamSettingsChanged) && Intrinsics3.areEqual(this.durationZeroReceivers, trackVideoStreamEnded.durationZeroReceivers) && Intrinsics3.areEqual(this.durationVideoStopped, trackVideoStreamEnded.durationVideoStopped) && Intrinsics3.areEqual(this.durationVideoEffect, trackVideoStreamEnded.durationVideoEffect) && Intrinsics3.areEqual(this.quality, trackVideoStreamEnded.quality) && Intrinsics3.areEqual(this.qpSum, trackVideoStreamEnded.qpSum) && Intrinsics3.areEqual(this.clientPerformanceCpuPercentile25, trackVideoStreamEnded.clientPerformanceCpuPercentile25) && Intrinsics3.areEqual(this.clientPerformanceCpuPercentile50, trackVideoStreamEnded.clientPerformanceCpuPercentile50) && Intrinsics3.areEqual(this.clientPerformanceCpuPercentile75, trackVideoStreamEnded.clientPerformanceCpuPercentile75) && Intrinsics3.areEqual(this.clientPerformanceCpuPercentile90, trackVideoStreamEnded.clientPerformanceCpuPercentile90) && Intrinsics3.areEqual(this.clientPerformanceCpuPercentile95, trackVideoStreamEnded.clientPerformanceCpuPercentile95) && Intrinsics3.areEqual(this.clientPerformanceMemoryPercentile25, trackVideoStreamEnded.clientPerformanceMemoryPercentile25) && Intrinsics3.areEqual(this.clientPerformanceMemoryPercentile50, trackVideoStreamEnded.clientPerformanceMemoryPercentile50) && Intrinsics3.areEqual(this.clientPerformanceMemoryPercentile75, trackVideoStreamEnded.clientPerformanceMemoryPercentile75) && Intrinsics3.areEqual(this.clientPerformanceMemoryPercentile90, trackVideoStreamEnded.clientPerformanceMemoryPercentile90) && Intrinsics3.areEqual(this.clientPerformanceMemoryPercentile95, trackVideoStreamEnded.clientPerformanceMemoryPercentile95) && Intrinsics3.areEqual(this.clientPerformanceMemoryMin, trackVideoStreamEnded.clientPerformanceMemoryMin) && Intrinsics3.areEqual(this.clientPerformanceMemoryMax, trackVideoStreamEnded.clientPerformanceMemoryMax) && Intrinsics3.areEqual(this.voiceBackendVersion, trackVideoStreamEnded.voiceBackendVersion) && Intrinsics3.areEqual(this.rtcWorkerBackendVersion, trackVideoStreamEnded.rtcWorkerBackendVersion) && Intrinsics3.areEqual(this.durationAggregation, trackVideoStreamEnded.durationAggregation) && Intrinsics3.areEqual(this.durationStoppedReceiving, trackVideoStreamEnded.durationStoppedReceiving) && Intrinsics3.areEqual(this.receiverPauseCount, trackVideoStreamEnded.receiverPauseCount) && Intrinsics3.areEqual(this.receiverFreezeCount, trackVideoStreamEnded.receiverFreezeCount) && Intrinsics3.areEqual(this.receiverTotalPausesDuration, trackVideoStreamEnded.receiverTotalPausesDuration) && Intrinsics3.areEqual(this.receiverTotalFreezesDuration, trackVideoStreamEnded.receiverTotalFreezesDuration) && Intrinsics3.areEqual(this.receiverTotalFramesDuration, trackVideoStreamEnded.receiverTotalFramesDuration) && Intrinsics3.areEqual(this.fpsPercentile1, trackVideoStreamEnded.fpsPercentile1) && Intrinsics3.areEqual(this.fpsPercentile5, trackVideoStreamEnded.fpsPercentile5) && Intrinsics3.areEqual(this.fpsPercentile10, trackVideoStreamEnded.fpsPercentile10) && Intrinsics3.areEqual(this.fpsPercentile25, trackVideoStreamEnded.fpsPercentile25) && Intrinsics3.areEqual(this.fpsPercentile50, trackVideoStreamEnded.fpsPercentile50) && Intrinsics3.areEqual(this.fpsPercentile75, trackVideoStreamEnded.fpsPercentile75) && Intrinsics3.areEqual(this.bitratePercentile1, trackVideoStreamEnded.bitratePercentile1) && Intrinsics3.areEqual(this.bitratePercentile5, trackVideoStreamEnded.bitratePercentile5) && Intrinsics3.areEqual(this.bitratePercentile10, trackVideoStreamEnded.bitratePercentile10) && Intrinsics3.areEqual(this.bitratePercentile25, trackVideoStreamEnded.bitratePercentile25) && Intrinsics3.areEqual(this.bitratePercentile50, trackVideoStreamEnded.bitratePercentile50) && Intrinsics3.areEqual(this.bitratePercentile75, trackVideoStreamEnded.bitratePercentile75) && Intrinsics3.areEqual(this.resolutionPercentile1, trackVideoStreamEnded.resolutionPercentile1) && Intrinsics3.areEqual(this.resolutionPercentile5, trackVideoStreamEnded.resolutionPercentile5) && Intrinsics3.areEqual(this.resolutionPercentile10, trackVideoStreamEnded.resolutionPercentile10) && Intrinsics3.areEqual(this.resolutionPercentile25, trackVideoStreamEnded.resolutionPercentile25) && Intrinsics3.areEqual(this.resolutionPercentile50, trackVideoStreamEnded.resolutionPercentile50) && Intrinsics3.areEqual(this.resolutionPercentile75, trackVideoStreamEnded.resolutionPercentile75);
    }

    public int hashCode() {
        Long l = this.guildId;
        int iHashCode = (l != null ? l.hashCode() : 0) * 31;
        Long l2 = this.channelId;
        int iHashCode2 = (iHashCode + (l2 != null ? l2.hashCode() : 0)) * 31;
        CharSequence charSequence = this.rtcConnectionId;
        int iHashCode3 = (iHashCode2 + (charSequence != null ? charSequence.hashCode() : 0)) * 31;
        CharSequence charSequence2 = this.mediaSessionId;
        int iHashCode4 = (iHashCode3 + (charSequence2 != null ? charSequence2.hashCode() : 0)) * 31;
        CharSequence charSequence3 = this.parentMediaSessionId;
        int iHashCode5 = (iHashCode4 + (charSequence3 != null ? charSequence3.hashCode() : 0)) * 31;
        CharSequence charSequence4 = this.context;
        int iHashCode6 = (iHashCode5 + (charSequence4 != null ? charSequence4.hashCode() : 0)) * 31;
        Long l3 = this.senderUserId;
        int iHashCode7 = (iHashCode6 + (l3 != null ? l3.hashCode() : 0)) * 31;
        Long l4 = this.duration;
        int iHashCode8 = (iHashCode7 + (l4 != null ? l4.hashCode() : 0)) * 31;
        Long l5 = this.numBytesReceived;
        int iHashCode9 = (iHashCode8 + (l5 != null ? l5.hashCode() : 0)) * 31;
        Long l6 = this.numBytes;
        int iHashCode10 = (iHashCode9 + (l6 != null ? l6.hashCode() : 0)) * 31;
        Long l7 = this.numPacketsLost;
        int iHashCode11 = (iHashCode10 + (l7 != null ? l7.hashCode() : 0)) * 31;
        Long l8 = this.numPacketsReceived;
        int iHashCode12 = (iHashCode11 + (l8 != null ? l8.hashCode() : 0)) * 31;
        Long l9 = this.numPackets;
        int iHashCode13 = (iHashCode12 + (l9 != null ? l9.hashCode() : 0)) * 31;
        Long l10 = this.numFramesDropped;
        int iHashCode14 = (iHashCode13 + (l10 != null ? l10.hashCode() : 0)) * 31;
        Long l11 = this.numFramesReceived;
        int iHashCode15 = (iHashCode14 + (l11 != null ? l11.hashCode() : 0)) * 31;
        Long l12 = this.numFrames;
        int iHashCode16 = (iHashCode15 + (l12 != null ? l12.hashCode() : 0)) * 31;
        Long l13 = this.numQualityChanges;
        int iHashCode17 = (iHashCode16 + (l13 != null ? l13.hashCode() : 0)) * 31;
        Long l14 = this.numPauses;
        int iHashCode18 = (iHashCode17 + (l14 != null ? l14.hashCode() : 0)) * 31;
        Long l15 = this.numNacks;
        int iHashCode19 = (iHashCode18 + (l15 != null ? l15.hashCode() : 0)) * 31;
        Long l16 = this.numPlis;
        int iHashCode20 = (iHashCode19 + (l16 != null ? l16.hashCode() : 0)) * 31;
        Long l17 = this.durationPaused;
        int iHashCode21 = (iHashCode20 + (l17 != null ? l17.hashCode() : 0)) * 31;
        CharSequence charSequence5 = this.lastQuality;
        int iHashCode22 = (iHashCode21 + (charSequence5 != null ? charSequence5.hashCode() : 0)) * 31;
        CharSequence charSequence6 = this.reason;
        int iHashCode23 = (iHashCode22 + (charSequence6 != null ? charSequence6.hashCode() : 0)) * 31;
        CharSequence charSequence7 = this.participantType;
        int iHashCode24 = (iHashCode23 + (charSequence7 != null ? charSequence7.hashCode() : 0)) * 31;
        CharSequence charSequence8 = this.shareApplicationName;
        int iHashCode25 = (iHashCode24 + (charSequence8 != null ? charSequence8.hashCode() : 0)) * 31;
        Long l18 = this.shareApplicationId;
        int iHashCode26 = (iHashCode25 + (l18 != null ? l18.hashCode() : 0)) * 31;
        CharSequence charSequence9 = this.shareApplicationExecutable;
        int iHashCode27 = (iHashCode26 + (charSequence9 != null ? charSequence9.hashCode() : 0)) * 31;
        List<CharSequence> list = this.streamApplicationName;
        int iHashCode28 = (iHashCode27 + (list != null ? list.hashCode() : 0)) * 31;
        CharSequence charSequence10 = this.streamRegion;
        int iHashCode29 = (iHashCode28 + (charSequence10 != null ? charSequence10.hashCode() : 0)) * 31;
        CharSequence charSequence11 = this.guildRegion;
        int iHashCode30 = (iHashCode29 + (charSequence11 != null ? charSequence11.hashCode() : 0)) * 31;
        Long l19 = this.maxViewers;
        int iHashCode31 = (iHashCode30 + (l19 != null ? l19.hashCode() : 0)) * 31;
        Long l20 = this.avgBitrate;
        int iHashCode32 = (iHashCode31 + (l20 != null ? l20.hashCode() : 0)) * 31;
        Long l21 = this.targetBitrate;
        int iHashCode33 = (iHashCode32 + (l21 != null ? l21.hashCode() : 0)) * 31;
        Long l22 = this.targetBitrateMax;
        int iHashCode34 = (iHashCode33 + (l22 != null ? l22.hashCode() : 0)) * 31;
        Long l23 = this.targetBitrateNetwork;
        int iHashCode35 = (iHashCode34 + (l23 != null ? l23.hashCode() : 0)) * 31;
        Long l24 = this.targetFps;
        int iHashCode36 = (iHashCode35 + (l24 != null ? l24.hashCode() : 0)) * 31;
        Long l25 = this.targetResolutionHeight;
        int iHashCode37 = (iHashCode36 + (l25 != null ? l25.hashCode() : 0)) * 31;
        Long l26 = this.durationStreamUnder8mbps;
        int iHashCode38 = (iHashCode37 + (l26 != null ? l26.hashCode() : 0)) * 31;
        Long l27 = this.durationStreamUnder7mbps;
        int iHashCode39 = (iHashCode38 + (l27 != null ? l27.hashCode() : 0)) * 31;
        Long l28 = this.durationStreamUnder6mbps;
        int iHashCode40 = (iHashCode39 + (l28 != null ? l28.hashCode() : 0)) * 31;
        Long l29 = this.durationStreamUnder5mbps;
        int iHashCode41 = (iHashCode40 + (l29 != null ? l29.hashCode() : 0)) * 31;
        Long l30 = this.durationStreamUnder4mbps;
        int iHashCode42 = (iHashCode41 + (l30 != null ? l30.hashCode() : 0)) * 31;
        Long l31 = this.durationStreamUnder3mbps;
        int iHashCode43 = (iHashCode42 + (l31 != null ? l31.hashCode() : 0)) * 31;
        Long l32 = this.durationStreamUnder2mbps;
        int iHashCode44 = (iHashCode43 + (l32 != null ? l32.hashCode() : 0)) * 31;
        Long l33 = this.durationStreamUnder15mbps;
        int iHashCode45 = (iHashCode44 + (l33 != null ? l33.hashCode() : 0)) * 31;
        Long l34 = this.durationStreamUnder1mbps;
        int iHashCode46 = (iHashCode45 + (l34 != null ? l34.hashCode() : 0)) * 31;
        Long l35 = this.durationStreamUnder05mbps;
        int iHashCode47 = (iHashCode46 + (l35 != null ? l35.hashCode() : 0)) * 31;
        Long l36 = this.durationStreamAt0mbps;
        int iHashCode48 = (iHashCode47 + (l36 != null ? l36.hashCode() : 0)) * 31;
        Long l37 = this.avgFps;
        int iHashCode49 = (iHashCode48 + (l37 != null ? l37.hashCode() : 0)) * 31;
        Long l38 = this.durationFpsUnder60;
        int iHashCode50 = (iHashCode49 + (l38 != null ? l38.hashCode() : 0)) * 31;
        Long l39 = this.durationFpsUnder55;
        int iHashCode51 = (iHashCode50 + (l39 != null ? l39.hashCode() : 0)) * 31;
        Long l40 = this.durationFpsUnder50;
        int iHashCode52 = (iHashCode51 + (l40 != null ? l40.hashCode() : 0)) * 31;
        Long l41 = this.durationFpsUnder45;
        int iHashCode53 = (iHashCode52 + (l41 != null ? l41.hashCode() : 0)) * 31;
        Long l42 = this.durationFpsUnder40;
        int iHashCode54 = (iHashCode53 + (l42 != null ? l42.hashCode() : 0)) * 31;
        Long l43 = this.durationFpsUnder35;
        int iHashCode55 = (iHashCode54 + (l43 != null ? l43.hashCode() : 0)) * 31;
        Long l44 = this.durationFpsUnder30;
        int iHashCode56 = (iHashCode55 + (l44 != null ? l44.hashCode() : 0)) * 31;
        Long l45 = this.durationFpsUnder25;
        int iHashCode57 = (iHashCode56 + (l45 != null ? l45.hashCode() : 0)) * 31;
        Long l46 = this.durationFpsUnder20;
        int iHashCode58 = (iHashCode57 + (l46 != null ? l46.hashCode() : 0)) * 31;
        Long l47 = this.durationFpsUnder15;
        int iHashCode59 = (iHashCode58 + (l47 != null ? l47.hashCode() : 0)) * 31;
        Long l48 = this.durationFpsUnder10;
        int iHashCode60 = (iHashCode59 + (l48 != null ? l48.hashCode() : 0)) * 31;
        Long l49 = this.durationFpsUnder5;
        int iHashCode61 = (iHashCode60 + (l49 != null ? l49.hashCode() : 0)) * 31;
        Long l50 = this.durationFpsAt0;
        int iHashCode62 = (iHashCode61 + (l50 != null ? l50.hashCode() : 0)) * 31;
        Long l51 = this.avgResolution;
        int iHashCode63 = (iHashCode62 + (l51 != null ? l51.hashCode() : 0)) * 31;
        Long l52 = this.durationResolutionUnder720;
        int iHashCode64 = (iHashCode63 + (l52 != null ? l52.hashCode() : 0)) * 31;
        Long l53 = this.durationResolutionUnder480;
        int iHashCode65 = (iHashCode64 + (l53 != null ? l53.hashCode() : 0)) * 31;
        Long l54 = this.durationResolutionUnder360;
        int iHashCode66 = (iHashCode65 + (l54 != null ? l54.hashCode() : 0)) * 31;
        CharSequence charSequence12 = this.videoLayout;
        int iHashCode67 = (iHashCode66 + (charSequence12 != null ? charSequence12.hashCode() : 0)) * 31;
        Long l55 = this.numLayoutChanges;
        int iHashCode68 = (iHashCode67 + (l55 != null ? l55.hashCode() : 0)) * 31;
        Long l56 = this.durationLayoutTheatre;
        int iHashCode69 = (iHashCode68 + (l56 != null ? l56.hashCode() : 0)) * 31;
        Long l57 = this.durationLayoutPip;
        int iHashCode70 = (iHashCode69 + (l57 != null ? l57.hashCode() : 0)) * 31;
        Long l58 = this.durationLayoutFullscreen;
        int iHashCode71 = (iHashCode70 + (l58 != null ? l58.hashCode() : 0)) * 31;
        Long l59 = this.durationLayoutPopout;
        int iHashCode72 = (iHashCode71 + (l59 != null ? l59.hashCode() : 0)) * 31;
        Long l60 = this.durationLayoutPortrait;
        int iHashCode73 = (iHashCode72 + (l60 != null ? l60.hashCode() : 0)) * 31;
        Long l61 = this.durationLayoutLandscape;
        int iHashCode74 = (iHashCode73 + (l61 != null ? l61.hashCode() : 0)) * 31;
        Long l62 = this.durationLayoutMinimized;
        int iHashCode75 = (iHashCode74 + (l62 != null ? l62.hashCode() : 0)) * 31;
        Long l63 = this.timeToFirstFrameMs;
        int iHashCode76 = (iHashCode75 + (l63 != null ? l63.hashCode() : 0)) * 31;
        Long l64 = this.soundshareAttachRequestedCount;
        int iHashCode77 = (iHashCode76 + (l64 != null ? l64.hashCode() : 0)) * 31;
        Long l65 = this.soundshareCapturingCount;
        int iHashCode78 = (iHashCode77 + (l65 != null ? l65.hashCode() : 0)) * 31;
        Long l66 = this.soundshareCaptureStoppedCount;
        int iHashCode79 = (iHashCode78 + (l66 != null ? l66.hashCode() : 0)) * 31;
        Long l67 = this.soundshareHookedCount;
        int iHashCode80 = (iHashCode79 + (l67 != null ? l67.hashCode() : 0)) * 31;
        Long l68 = this.soundshareRecvConnectCount;
        int iHashCode81 = (iHashCode80 + (l68 != null ? l68.hashCode() : 0)) * 31;
        Long l69 = this.soundshareRecvDisconnectCount;
        int iHashCode82 = (iHashCode81 + (l69 != null ? l69.hashCode() : 0)) * 31;
        Long l70 = this.soundshareRecvStartedCount;
        int iHashCode83 = (iHashCode82 + (l70 != null ? l70.hashCode() : 0)) * 31;
        Long l71 = this.soundshareRecvStoppedCount;
        int iHashCode84 = (iHashCode83 + (l71 != null ? l71.hashCode() : 0)) * 31;
        Long l72 = this.soundshareRecvFailedCount;
        int iHashCode85 = (iHashCode84 + (l72 != null ? l72.hashCode() : 0)) * 31;
        Long l73 = this.soundshareRecvFormatCount;
        int iHashCode86 = (iHashCode85 + (l73 != null ? l73.hashCode() : 0)) * 31;
        Long l74 = this.soundshareSendAnnounceCount;
        int iHashCode87 = (iHashCode86 + (l74 != null ? l74.hashCode() : 0)) * 31;
        Long l75 = this.soundshareSendStartCount;
        int iHashCode88 = (iHashCode87 + (l75 != null ? l75.hashCode() : 0)) * 31;
        Long l76 = this.soundshareSendStopCount;
        int iHashCode89 = (iHashCode88 + (l76 != null ? l76.hashCode() : 0)) * 31;
        Long l77 = this.soundshareMalformedTraceCount;
        int iHashCode90 = (iHashCode89 + (l77 != null ? l77.hashCode() : 0)) * 31;
        Long l78 = this.soundshareAudioDetectedCount;
        int iHashCode91 = (iHashCode90 + (l78 != null ? l78.hashCode() : 0)) * 31;
        Long l79 = this.soundshareStateTransitionDetachedCount;
        int iHashCode92 = (iHashCode91 + (l79 != null ? l79.hashCode() : 0)) * 31;
        Long l80 = this.soundshareStateTransitionWaitingCount;
        int iHashCode93 = (iHashCode92 + (l80 != null ? l80.hashCode() : 0)) * 31;
        Long l81 = this.soundshareStateTransitionAttachedCount;
        int iHashCode94 = (iHashCode93 + (l81 != null ? l81.hashCode() : 0)) * 31;
        Long l82 = this.soundshareStateTransitionStartedCount;
        int iHashCode95 = (iHashCode94 + (l82 != null ? l82.hashCode() : 0)) * 31;
        Long l83 = this.soundshareStateTransitionPlayingCount;
        int iHashCode96 = (iHashCode95 + (l83 != null ? l83.hashCode() : 0)) * 31;
        Long l84 = this.soundshareStateTransitionSilenceCount;
        int iHashCode97 = (iHashCode96 + (l84 != null ? l84.hashCode() : 0)) * 31;
        Long l85 = this.soundshareUnknownEventCount;
        int iHashCode98 = (iHashCode97 + (l85 != null ? l85.hashCode() : 0)) * 31;
        Long l86 = this.soundshareFirstPid;
        int iHashCode99 = (iHashCode98 + (l86 != null ? l86.hashCode() : 0)) * 31;
        Long l87 = this.soundshareLastPid;
        int iHashCode100 = (iHashCode99 + (l87 != null ? l87.hashCode() : 0)) * 31;
        Long l88 = this.soundshareUniquePids;
        int iHashCode101 = (iHashCode100 + (l88 != null ? l88.hashCode() : 0)) * 31;
        CharSequence charSequence13 = this.soundshareFirstSession;
        int iHashCode102 = (iHashCode101 + (charSequence13 != null ? charSequence13.hashCode() : 0)) * 31;
        CharSequence charSequence14 = this.soundshareLastSession;
        int iHashCode103 = (iHashCode102 + (charSequence14 != null ? charSequence14.hashCode() : 0)) * 31;
        Long l89 = this.durationEncoderNvidiaCuda;
        int iHashCode104 = (iHashCode103 + (l89 != null ? l89.hashCode() : 0)) * 31;
        Long l90 = this.durationEncoderNvidiaDirect3d;
        int iHashCode105 = (iHashCode104 + (l90 != null ? l90.hashCode() : 0)) * 31;
        Long l91 = this.durationEncoderNvidiaOpenh264;
        int iHashCode106 = (iHashCode105 + (l91 != null ? l91.hashCode() : 0)) * 31;
        Long l92 = this.durationEncoderOpenh264;
        int iHashCode107 = (iHashCode106 + (l92 != null ? l92.hashCode() : 0)) * 31;
        Long l93 = this.durationEncoderNvidiaVideotoolbox;
        int iHashCode108 = (iHashCode107 + (l93 != null ? l93.hashCode() : 0)) * 31;
        Long l94 = this.durationEncoderVideotoolbox;
        int iHashCode109 = (iHashCode108 + (l94 != null ? l94.hashCode() : 0)) * 31;
        Long l95 = this.durationEncoderAmdDirect3d;
        int iHashCode110 = (iHashCode109 + (l95 != null ? l95.hashCode() : 0)) * 31;
        Long l96 = this.durationEncoderIntel;
        int iHashCode111 = (iHashCode110 + (l96 != null ? l96.hashCode() : 0)) * 31;
        Long l97 = this.durationEncoderIntelDirect3d;
        int iHashCode112 = (iHashCode111 + (l97 != null ? l97.hashCode() : 0)) * 31;
        Long l98 = this.durationEncoderUnknown;
        int iHashCode113 = (iHashCode112 + (l98 != null ? l98.hashCode() : 0)) * 31;
        Boolean bool = this.streamSettingsChanged;
        int iHashCode114 = (iHashCode113 + (bool != null ? bool.hashCode() : 0)) * 31;
        Long l99 = this.durationZeroReceivers;
        int iHashCode115 = (iHashCode114 + (l99 != null ? l99.hashCode() : 0)) * 31;
        Long l100 = this.durationVideoStopped;
        int iHashCode116 = (iHashCode115 + (l100 != null ? l100.hashCode() : 0)) * 31;
        Long l101 = this.durationVideoEffect;
        int iHashCode117 = (iHashCode116 + (l101 != null ? l101.hashCode() : 0)) * 31;
        Long l102 = this.quality;
        int iHashCode118 = (iHashCode117 + (l102 != null ? l102.hashCode() : 0)) * 31;
        Long l103 = this.qpSum;
        int iHashCode119 = (iHashCode118 + (l103 != null ? l103.hashCode() : 0)) * 31;
        Float f = this.clientPerformanceCpuPercentile25;
        int iHashCode120 = (iHashCode119 + (f != null ? f.hashCode() : 0)) * 31;
        Float f2 = this.clientPerformanceCpuPercentile50;
        int iHashCode121 = (iHashCode120 + (f2 != null ? f2.hashCode() : 0)) * 31;
        Float f3 = this.clientPerformanceCpuPercentile75;
        int iHashCode122 = (iHashCode121 + (f3 != null ? f3.hashCode() : 0)) * 31;
        Float f4 = this.clientPerformanceCpuPercentile90;
        int iHashCode123 = (iHashCode122 + (f4 != null ? f4.hashCode() : 0)) * 31;
        Float f5 = this.clientPerformanceCpuPercentile95;
        int iHashCode124 = (iHashCode123 + (f5 != null ? f5.hashCode() : 0)) * 31;
        Long l104 = this.clientPerformanceMemoryPercentile25;
        int iHashCode125 = (iHashCode124 + (l104 != null ? l104.hashCode() : 0)) * 31;
        Long l105 = this.clientPerformanceMemoryPercentile50;
        int iHashCode126 = (iHashCode125 + (l105 != null ? l105.hashCode() : 0)) * 31;
        Long l106 = this.clientPerformanceMemoryPercentile75;
        int iHashCode127 = (iHashCode126 + (l106 != null ? l106.hashCode() : 0)) * 31;
        Long l107 = this.clientPerformanceMemoryPercentile90;
        int iHashCode128 = (iHashCode127 + (l107 != null ? l107.hashCode() : 0)) * 31;
        Long l108 = this.clientPerformanceMemoryPercentile95;
        int iHashCode129 = (iHashCode128 + (l108 != null ? l108.hashCode() : 0)) * 31;
        Long l109 = this.clientPerformanceMemoryMin;
        int iHashCode130 = (iHashCode129 + (l109 != null ? l109.hashCode() : 0)) * 31;
        Long l110 = this.clientPerformanceMemoryMax;
        int iHashCode131 = (iHashCode130 + (l110 != null ? l110.hashCode() : 0)) * 31;
        CharSequence charSequence15 = this.voiceBackendVersion;
        int iHashCode132 = (iHashCode131 + (charSequence15 != null ? charSequence15.hashCode() : 0)) * 31;
        CharSequence charSequence16 = this.rtcWorkerBackendVersion;
        int iHashCode133 = (iHashCode132 + (charSequence16 != null ? charSequence16.hashCode() : 0)) * 31;
        Long l111 = this.durationAggregation;
        int iHashCode134 = (iHashCode133 + (l111 != null ? l111.hashCode() : 0)) * 31;
        Long l112 = this.durationStoppedReceiving;
        int iHashCode135 = (iHashCode134 + (l112 != null ? l112.hashCode() : 0)) * 31;
        Long l113 = this.receiverPauseCount;
        int iHashCode136 = (iHashCode135 + (l113 != null ? l113.hashCode() : 0)) * 31;
        Long l114 = this.receiverFreezeCount;
        int iHashCode137 = (iHashCode136 + (l114 != null ? l114.hashCode() : 0)) * 31;
        Long l115 = this.receiverTotalPausesDuration;
        int iHashCode138 = (iHashCode137 + (l115 != null ? l115.hashCode() : 0)) * 31;
        Long l116 = this.receiverTotalFreezesDuration;
        int iHashCode139 = (iHashCode138 + (l116 != null ? l116.hashCode() : 0)) * 31;
        Long l117 = this.receiverTotalFramesDuration;
        int iHashCode140 = (iHashCode139 + (l117 != null ? l117.hashCode() : 0)) * 31;
        Long l118 = this.fpsPercentile1;
        int iHashCode141 = (iHashCode140 + (l118 != null ? l118.hashCode() : 0)) * 31;
        Long l119 = this.fpsPercentile5;
        int iHashCode142 = (iHashCode141 + (l119 != null ? l119.hashCode() : 0)) * 31;
        Long l120 = this.fpsPercentile10;
        int iHashCode143 = (iHashCode142 + (l120 != null ? l120.hashCode() : 0)) * 31;
        Long l121 = this.fpsPercentile25;
        int iHashCode144 = (iHashCode143 + (l121 != null ? l121.hashCode() : 0)) * 31;
        Long l122 = this.fpsPercentile50;
        int iHashCode145 = (iHashCode144 + (l122 != null ? l122.hashCode() : 0)) * 31;
        Long l123 = this.fpsPercentile75;
        int iHashCode146 = (iHashCode145 + (l123 != null ? l123.hashCode() : 0)) * 31;
        Long l124 = this.bitratePercentile1;
        int iHashCode147 = (iHashCode146 + (l124 != null ? l124.hashCode() : 0)) * 31;
        Long l125 = this.bitratePercentile5;
        int iHashCode148 = (iHashCode147 + (l125 != null ? l125.hashCode() : 0)) * 31;
        Long l126 = this.bitratePercentile10;
        int iHashCode149 = (iHashCode148 + (l126 != null ? l126.hashCode() : 0)) * 31;
        Long l127 = this.bitratePercentile25;
        int iHashCode150 = (iHashCode149 + (l127 != null ? l127.hashCode() : 0)) * 31;
        Long l128 = this.bitratePercentile50;
        int iHashCode151 = (iHashCode150 + (l128 != null ? l128.hashCode() : 0)) * 31;
        Long l129 = this.bitratePercentile75;
        int iHashCode152 = (iHashCode151 + (l129 != null ? l129.hashCode() : 0)) * 31;
        Long l130 = this.resolutionPercentile1;
        int iHashCode153 = (iHashCode152 + (l130 != null ? l130.hashCode() : 0)) * 31;
        Long l131 = this.resolutionPercentile5;
        int iHashCode154 = (iHashCode153 + (l131 != null ? l131.hashCode() : 0)) * 31;
        Long l132 = this.resolutionPercentile10;
        int iHashCode155 = (iHashCode154 + (l132 != null ? l132.hashCode() : 0)) * 31;
        Long l133 = this.resolutionPercentile25;
        int iHashCode156 = (iHashCode155 + (l133 != null ? l133.hashCode() : 0)) * 31;
        Long l134 = this.resolutionPercentile50;
        int iHashCode157 = (iHashCode156 + (l134 != null ? l134.hashCode() : 0)) * 31;
        Long l135 = this.resolutionPercentile75;
        return iHashCode157 + (l135 != null ? l135.hashCode() : 0);
    }

    public String toString() {
        StringBuilder sbU = outline.U("TrackVideoStreamEnded(guildId=");
        sbU.append(this.guildId);
        sbU.append(", channelId=");
        sbU.append(this.channelId);
        sbU.append(", rtcConnectionId=");
        sbU.append(this.rtcConnectionId);
        sbU.append(", mediaSessionId=");
        sbU.append(this.mediaSessionId);
        sbU.append(", parentMediaSessionId=");
        sbU.append(this.parentMediaSessionId);
        sbU.append(", context=");
        sbU.append(this.context);
        sbU.append(", senderUserId=");
        sbU.append(this.senderUserId);
        sbU.append(", duration=");
        sbU.append(this.duration);
        sbU.append(", numBytesReceived=");
        sbU.append(this.numBytesReceived);
        sbU.append(", numBytes=");
        sbU.append(this.numBytes);
        sbU.append(", numPacketsLost=");
        sbU.append(this.numPacketsLost);
        sbU.append(", numPacketsReceived=");
        sbU.append(this.numPacketsReceived);
        sbU.append(", numPackets=");
        sbU.append(this.numPackets);
        sbU.append(", numFramesDropped=");
        sbU.append(this.numFramesDropped);
        sbU.append(", numFramesReceived=");
        sbU.append(this.numFramesReceived);
        sbU.append(", numFrames=");
        sbU.append(this.numFrames);
        sbU.append(", numQualityChanges=");
        sbU.append(this.numQualityChanges);
        sbU.append(", numPauses=");
        sbU.append(this.numPauses);
        sbU.append(", numNacks=");
        sbU.append(this.numNacks);
        sbU.append(", numPlis=");
        sbU.append(this.numPlis);
        sbU.append(", durationPaused=");
        sbU.append(this.durationPaused);
        sbU.append(", lastQuality=");
        sbU.append(this.lastQuality);
        sbU.append(", reason=");
        sbU.append(this.reason);
        sbU.append(", participantType=");
        sbU.append(this.participantType);
        sbU.append(", shareApplicationName=");
        sbU.append(this.shareApplicationName);
        sbU.append(", shareApplicationId=");
        sbU.append(this.shareApplicationId);
        sbU.append(", shareApplicationExecutable=");
        sbU.append(this.shareApplicationExecutable);
        sbU.append(", streamApplicationName=");
        sbU.append(this.streamApplicationName);
        sbU.append(", streamRegion=");
        sbU.append(this.streamRegion);
        sbU.append(", guildRegion=");
        sbU.append(this.guildRegion);
        sbU.append(", maxViewers=");
        sbU.append(this.maxViewers);
        sbU.append(", avgBitrate=");
        sbU.append(this.avgBitrate);
        sbU.append(", targetBitrate=");
        sbU.append(this.targetBitrate);
        sbU.append(", targetBitrateMax=");
        sbU.append(this.targetBitrateMax);
        sbU.append(", targetBitrateNetwork=");
        sbU.append(this.targetBitrateNetwork);
        sbU.append(", targetFps=");
        sbU.append(this.targetFps);
        sbU.append(", targetResolutionHeight=");
        sbU.append(this.targetResolutionHeight);
        sbU.append(", durationStreamUnder8mbps=");
        sbU.append(this.durationStreamUnder8mbps);
        sbU.append(", durationStreamUnder7mbps=");
        sbU.append(this.durationStreamUnder7mbps);
        sbU.append(", durationStreamUnder6mbps=");
        sbU.append(this.durationStreamUnder6mbps);
        sbU.append(", durationStreamUnder5mbps=");
        sbU.append(this.durationStreamUnder5mbps);
        sbU.append(", durationStreamUnder4mbps=");
        sbU.append(this.durationStreamUnder4mbps);
        sbU.append(", durationStreamUnder3mbps=");
        sbU.append(this.durationStreamUnder3mbps);
        sbU.append(", durationStreamUnder2mbps=");
        sbU.append(this.durationStreamUnder2mbps);
        sbU.append(", durationStreamUnder15mbps=");
        sbU.append(this.durationStreamUnder15mbps);
        sbU.append(", durationStreamUnder1mbps=");
        sbU.append(this.durationStreamUnder1mbps);
        sbU.append(", durationStreamUnder05mbps=");
        sbU.append(this.durationStreamUnder05mbps);
        sbU.append(", durationStreamAt0mbps=");
        sbU.append(this.durationStreamAt0mbps);
        sbU.append(", avgFps=");
        sbU.append(this.avgFps);
        sbU.append(", durationFpsUnder60=");
        sbU.append(this.durationFpsUnder60);
        sbU.append(", durationFpsUnder55=");
        sbU.append(this.durationFpsUnder55);
        sbU.append(", durationFpsUnder50=");
        sbU.append(this.durationFpsUnder50);
        sbU.append(", durationFpsUnder45=");
        sbU.append(this.durationFpsUnder45);
        sbU.append(", durationFpsUnder40=");
        sbU.append(this.durationFpsUnder40);
        sbU.append(", durationFpsUnder35=");
        sbU.append(this.durationFpsUnder35);
        sbU.append(", durationFpsUnder30=");
        sbU.append(this.durationFpsUnder30);
        sbU.append(", durationFpsUnder25=");
        sbU.append(this.durationFpsUnder25);
        sbU.append(", durationFpsUnder20=");
        sbU.append(this.durationFpsUnder20);
        sbU.append(", durationFpsUnder15=");
        sbU.append(this.durationFpsUnder15);
        sbU.append(", durationFpsUnder10=");
        sbU.append(this.durationFpsUnder10);
        sbU.append(", durationFpsUnder5=");
        sbU.append(this.durationFpsUnder5);
        sbU.append(", durationFpsAt0=");
        sbU.append(this.durationFpsAt0);
        sbU.append(", avgResolution=");
        sbU.append(this.avgResolution);
        sbU.append(", durationResolutionUnder720=");
        sbU.append(this.durationResolutionUnder720);
        sbU.append(", durationResolutionUnder480=");
        sbU.append(this.durationResolutionUnder480);
        sbU.append(", durationResolutionUnder360=");
        sbU.append(this.durationResolutionUnder360);
        sbU.append(", videoLayout=");
        sbU.append(this.videoLayout);
        sbU.append(", numLayoutChanges=");
        sbU.append(this.numLayoutChanges);
        sbU.append(", durationLayoutTheatre=");
        sbU.append(this.durationLayoutTheatre);
        sbU.append(", durationLayoutPip=");
        sbU.append(this.durationLayoutPip);
        sbU.append(", durationLayoutFullscreen=");
        sbU.append(this.durationLayoutFullscreen);
        sbU.append(", durationLayoutPopout=");
        sbU.append(this.durationLayoutPopout);
        sbU.append(", durationLayoutPortrait=");
        sbU.append(this.durationLayoutPortrait);
        sbU.append(", durationLayoutLandscape=");
        sbU.append(this.durationLayoutLandscape);
        sbU.append(", durationLayoutMinimized=");
        sbU.append(this.durationLayoutMinimized);
        sbU.append(", timeToFirstFrameMs=");
        sbU.append(this.timeToFirstFrameMs);
        sbU.append(", soundshareAttachRequestedCount=");
        sbU.append(this.soundshareAttachRequestedCount);
        sbU.append(", soundshareCapturingCount=");
        sbU.append(this.soundshareCapturingCount);
        sbU.append(", soundshareCaptureStoppedCount=");
        sbU.append(this.soundshareCaptureStoppedCount);
        sbU.append(", soundshareHookedCount=");
        sbU.append(this.soundshareHookedCount);
        sbU.append(", soundshareRecvConnectCount=");
        sbU.append(this.soundshareRecvConnectCount);
        sbU.append(", soundshareRecvDisconnectCount=");
        sbU.append(this.soundshareRecvDisconnectCount);
        sbU.append(", soundshareRecvStartedCount=");
        sbU.append(this.soundshareRecvStartedCount);
        sbU.append(", soundshareRecvStoppedCount=");
        sbU.append(this.soundshareRecvStoppedCount);
        sbU.append(", soundshareRecvFailedCount=");
        sbU.append(this.soundshareRecvFailedCount);
        sbU.append(", soundshareRecvFormatCount=");
        sbU.append(this.soundshareRecvFormatCount);
        sbU.append(", soundshareSendAnnounceCount=");
        sbU.append(this.soundshareSendAnnounceCount);
        sbU.append(", soundshareSendStartCount=");
        sbU.append(this.soundshareSendStartCount);
        sbU.append(", soundshareSendStopCount=");
        sbU.append(this.soundshareSendStopCount);
        sbU.append(", soundshareMalformedTraceCount=");
        sbU.append(this.soundshareMalformedTraceCount);
        sbU.append(", soundshareAudioDetectedCount=");
        sbU.append(this.soundshareAudioDetectedCount);
        sbU.append(", soundshareStateTransitionDetachedCount=");
        sbU.append(this.soundshareStateTransitionDetachedCount);
        sbU.append(", soundshareStateTransitionWaitingCount=");
        sbU.append(this.soundshareStateTransitionWaitingCount);
        sbU.append(", soundshareStateTransitionAttachedCount=");
        sbU.append(this.soundshareStateTransitionAttachedCount);
        sbU.append(", soundshareStateTransitionStartedCount=");
        sbU.append(this.soundshareStateTransitionStartedCount);
        sbU.append(", soundshareStateTransitionPlayingCount=");
        sbU.append(this.soundshareStateTransitionPlayingCount);
        sbU.append(", soundshareStateTransitionSilenceCount=");
        sbU.append(this.soundshareStateTransitionSilenceCount);
        sbU.append(", soundshareUnknownEventCount=");
        sbU.append(this.soundshareUnknownEventCount);
        sbU.append(", soundshareFirstPid=");
        sbU.append(this.soundshareFirstPid);
        sbU.append(", soundshareLastPid=");
        sbU.append(this.soundshareLastPid);
        sbU.append(", soundshareUniquePids=");
        sbU.append(this.soundshareUniquePids);
        sbU.append(", soundshareFirstSession=");
        sbU.append(this.soundshareFirstSession);
        sbU.append(", soundshareLastSession=");
        sbU.append(this.soundshareLastSession);
        sbU.append(", durationEncoderNvidiaCuda=");
        sbU.append(this.durationEncoderNvidiaCuda);
        sbU.append(", durationEncoderNvidiaDirect3d=");
        sbU.append(this.durationEncoderNvidiaDirect3d);
        sbU.append(", durationEncoderNvidiaOpenh264=");
        sbU.append(this.durationEncoderNvidiaOpenh264);
        sbU.append(", durationEncoderOpenh264=");
        sbU.append(this.durationEncoderOpenh264);
        sbU.append(", durationEncoderNvidiaVideotoolbox=");
        sbU.append(this.durationEncoderNvidiaVideotoolbox);
        sbU.append(", durationEncoderVideotoolbox=");
        sbU.append(this.durationEncoderVideotoolbox);
        sbU.append(", durationEncoderAmdDirect3d=");
        sbU.append(this.durationEncoderAmdDirect3d);
        sbU.append(", durationEncoderIntel=");
        sbU.append(this.durationEncoderIntel);
        sbU.append(", durationEncoderIntelDirect3d=");
        sbU.append(this.durationEncoderIntelDirect3d);
        sbU.append(", durationEncoderUnknown=");
        sbU.append(this.durationEncoderUnknown);
        sbU.append(", streamSettingsChanged=");
        sbU.append(this.streamSettingsChanged);
        sbU.append(", durationZeroReceivers=");
        sbU.append(this.durationZeroReceivers);
        sbU.append(", durationVideoStopped=");
        sbU.append(this.durationVideoStopped);
        sbU.append(", durationVideoEffect=");
        sbU.append(this.durationVideoEffect);
        sbU.append(", quality=");
        sbU.append(this.quality);
        sbU.append(", qpSum=");
        sbU.append(this.qpSum);
        sbU.append(", clientPerformanceCpuPercentile25=");
        sbU.append(this.clientPerformanceCpuPercentile25);
        sbU.append(", clientPerformanceCpuPercentile50=");
        sbU.append(this.clientPerformanceCpuPercentile50);
        sbU.append(", clientPerformanceCpuPercentile75=");
        sbU.append(this.clientPerformanceCpuPercentile75);
        sbU.append(", clientPerformanceCpuPercentile90=");
        sbU.append(this.clientPerformanceCpuPercentile90);
        sbU.append(", clientPerformanceCpuPercentile95=");
        sbU.append(this.clientPerformanceCpuPercentile95);
        sbU.append(", clientPerformanceMemoryPercentile25=");
        sbU.append(this.clientPerformanceMemoryPercentile25);
        sbU.append(", clientPerformanceMemoryPercentile50=");
        sbU.append(this.clientPerformanceMemoryPercentile50);
        sbU.append(", clientPerformanceMemoryPercentile75=");
        sbU.append(this.clientPerformanceMemoryPercentile75);
        sbU.append(", clientPerformanceMemoryPercentile90=");
        sbU.append(this.clientPerformanceMemoryPercentile90);
        sbU.append(", clientPerformanceMemoryPercentile95=");
        sbU.append(this.clientPerformanceMemoryPercentile95);
        sbU.append(", clientPerformanceMemoryMin=");
        sbU.append(this.clientPerformanceMemoryMin);
        sbU.append(", clientPerformanceMemoryMax=");
        sbU.append(this.clientPerformanceMemoryMax);
        sbU.append(", voiceBackendVersion=");
        sbU.append(this.voiceBackendVersion);
        sbU.append(", rtcWorkerBackendVersion=");
        sbU.append(this.rtcWorkerBackendVersion);
        sbU.append(", durationAggregation=");
        sbU.append(this.durationAggregation);
        sbU.append(", durationStoppedReceiving=");
        sbU.append(this.durationStoppedReceiving);
        sbU.append(", receiverPauseCount=");
        sbU.append(this.receiverPauseCount);
        sbU.append(", receiverFreezeCount=");
        sbU.append(this.receiverFreezeCount);
        sbU.append(", receiverTotalPausesDuration=");
        sbU.append(this.receiverTotalPausesDuration);
        sbU.append(", receiverTotalFreezesDuration=");
        sbU.append(this.receiverTotalFreezesDuration);
        sbU.append(", receiverTotalFramesDuration=");
        sbU.append(this.receiverTotalFramesDuration);
        sbU.append(", fpsPercentile1=");
        sbU.append(this.fpsPercentile1);
        sbU.append(", fpsPercentile5=");
        sbU.append(this.fpsPercentile5);
        sbU.append(", fpsPercentile10=");
        sbU.append(this.fpsPercentile10);
        sbU.append(", fpsPercentile25=");
        sbU.append(this.fpsPercentile25);
        sbU.append(", fpsPercentile50=");
        sbU.append(this.fpsPercentile50);
        sbU.append(", fpsPercentile75=");
        sbU.append(this.fpsPercentile75);
        sbU.append(", bitratePercentile1=");
        sbU.append(this.bitratePercentile1);
        sbU.append(", bitratePercentile5=");
        sbU.append(this.bitratePercentile5);
        sbU.append(", bitratePercentile10=");
        sbU.append(this.bitratePercentile10);
        sbU.append(", bitratePercentile25=");
        sbU.append(this.bitratePercentile25);
        sbU.append(", bitratePercentile50=");
        sbU.append(this.bitratePercentile50);
        sbU.append(", bitratePercentile75=");
        sbU.append(this.bitratePercentile75);
        sbU.append(", resolutionPercentile1=");
        sbU.append(this.resolutionPercentile1);
        sbU.append(", resolutionPercentile5=");
        sbU.append(this.resolutionPercentile5);
        sbU.append(", resolutionPercentile10=");
        sbU.append(this.resolutionPercentile10);
        sbU.append(", resolutionPercentile25=");
        sbU.append(this.resolutionPercentile25);
        sbU.append(", resolutionPercentile50=");
        sbU.append(this.resolutionPercentile50);
        sbU.append(", resolutionPercentile75=");
        return outline.G(sbU, this.resolutionPercentile75, ")");
    }
}
