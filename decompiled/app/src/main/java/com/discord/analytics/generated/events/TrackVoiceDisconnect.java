package com.discord.analytics.generated.events;

import b.d.b.a.outline;
import com.discord.analytics.generated.traits.TrackBase;
import com.discord.analytics.generated.traits.TrackBase2;
import com.discord.analytics.generated.traits.TrackNetworkInformationDurations;
import com.discord.analytics.generated.traits.TrackNetworkInformationDurations2;
import com.discord.api.science.AnalyticsSchema;
import com.discord.models.domain.ModelAuditLogEntry;
import d0.z.d.Intrinsics3;
import kotlin.Metadata;

/* compiled from: TrackVoiceDisconnect.kt */
@Metadata(bv = {1, 0, 3}, d1 = {"\u0000V\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\r\n\u0002\b\u0006\n\u0002\u0010\t\n\u0002\b\b\n\u0002\u0010\u0007\n\u0002\ba\n\u0002\u0018\u0002\n\u0002\b\"\n\u0002\u0018\u0002\n\u0002\bE\b\u0086\b\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u0003J\u0010\u0010\u0005\u001a\u00020\u0004HÖ\u0001¢\u0006\u0004\b\u0005\u0010\u0006J\u0010\u0010\b\u001a\u00020\u0007HÖ\u0001¢\u0006\u0004\b\b\u0010\tJ\u001a\u0010\r\u001a\u00020\f2\b\u0010\u000b\u001a\u0004\u0018\u00010\nHÖ\u0003¢\u0006\u0004\b\r\u0010\u000eR\u001b\u0010\u0010\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0010\u0010\u0011\u001a\u0004\b\u0012\u0010\u0013R\u001b\u0010\u0014\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b\u0014\u0010\u0011\u001a\u0004\b\u0015\u0010\u0013R\u001b\u0010\u0017\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b\u0017\u0010\u0018\u001a\u0004\b\u0019\u0010\u001aR\u001b\u0010\u001b\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b\u001b\u0010\u0018\u001a\u0004\b\u001c\u0010\u001aR\u001b\u0010\u001d\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b\u001d\u0010\u0018\u001a\u0004\b\u001e\u0010\u001aR\u001b\u0010 \u001a\u0004\u0018\u00010\u001f8\u0006@\u0006¢\u0006\f\n\u0004\b \u0010!\u001a\u0004\b\"\u0010#R\u001b\u0010$\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b$\u0010\u0018\u001a\u0004\b%\u0010\u001aR\u001b\u0010&\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b&\u0010\u0018\u001a\u0004\b'\u0010\u001aR\u001b\u0010(\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b(\u0010\u0018\u001a\u0004\b)\u0010\u001aR\u001b\u0010*\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b*\u0010\u0018\u001a\u0004\b+\u0010\u001aR\u001b\u0010,\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\f\n\u0004\b,\u0010-\u001a\u0004\b.\u0010/R\u001b\u00100\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b0\u0010\u0018\u001a\u0004\b1\u0010\u001aR\u001b\u00102\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b2\u0010\u0011\u001a\u0004\b3\u0010\u0013R\u001b\u00104\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b4\u0010\u0018\u001a\u0004\b5\u0010\u001aR\u001b\u00106\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b6\u0010\u0018\u001a\u0004\b7\u0010\u001aR\u001b\u00108\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b8\u0010\u0018\u001a\u0004\b9\u0010\u001aR\u001b\u0010:\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b:\u0010\u0018\u001a\u0004\b;\u0010\u001aR\u001b\u0010<\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\b<\u0010\u0011\u001a\u0004\b=\u0010\u0013R\u001b\u0010>\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b>\u0010\u0018\u001a\u0004\b?\u0010\u001aR\u001b\u0010@\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b@\u0010\u0018\u001a\u0004\bA\u0010\u001aR\u001b\u0010B\u001a\u0004\u0018\u00010\u001f8\u0006@\u0006¢\u0006\f\n\u0004\bB\u0010!\u001a\u0004\bC\u0010#R\u001b\u0010D\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bD\u0010\u0018\u001a\u0004\bE\u0010\u001aR\u001b\u0010F\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bF\u0010\u0011\u001a\u0004\bG\u0010\u0013R\u001b\u0010H\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bH\u0010\u0018\u001a\u0004\bI\u0010\u001aR\u001b\u0010J\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bJ\u0010\u0018\u001a\u0004\bK\u0010\u001aR\u001b\u0010L\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\f\n\u0004\bL\u0010-\u001a\u0004\bM\u0010/R\u001b\u0010N\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bN\u0010\u0018\u001a\u0004\bO\u0010\u001aR\u001b\u0010P\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bP\u0010\u0018\u001a\u0004\bQ\u0010\u001aR\u001b\u0010R\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bR\u0010\u0018\u001a\u0004\bS\u0010\u001aR\u001b\u0010T\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\f\n\u0004\bT\u0010\u0011\u001a\u0004\bU\u0010\u0013R\u001b\u0010V\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bV\u0010\u0018\u001a\u0004\bW\u0010\u001aR\u001b\u0010X\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bX\u0010\u0018\u001a\u0004\bY\u0010\u001aR\u001b\u0010Z\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bZ\u0010\u0018\u001a\u0004\b[\u0010\u001aR\u001b\u0010\\\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\f\n\u0004\b\\\u0010-\u001a\u0004\b]\u0010/R\u001b\u0010^\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b^\u0010\u0018\u001a\u0004\b_\u0010\u001aR\u001b\u0010`\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\f\n\u0004\b`\u0010-\u001a\u0004\ba\u0010/R\u001b\u0010b\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bb\u0010\u0018\u001a\u0004\bc\u0010\u001aR\u001b\u0010d\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bd\u0010\u0018\u001a\u0004\be\u0010\u001aR\u001b\u0010f\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bf\u0010\u0018\u001a\u0004\bg\u0010\u001aR\u001b\u0010h\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bh\u0010\u0018\u001a\u0004\bi\u0010\u001aR\u001b\u0010j\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bj\u0010\u0018\u001a\u0004\bk\u0010\u001aR\u001b\u0010l\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bl\u0010\u0018\u001a\u0004\bm\u0010\u001aR\u001c\u0010n\u001a\u00020\u00048\u0016@\u0016X\u0096D¢\u0006\f\n\u0004\bn\u0010o\u001a\u0004\bp\u0010\u0006R\u001b\u0010q\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bq\u0010\u0018\u001a\u0004\br\u0010\u001aR\u001b\u0010s\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bs\u0010\u0018\u001a\u0004\bt\u0010\u001aR\u001b\u0010u\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bu\u0010\u0018\u001a\u0004\bv\u0010\u001aR\u001b\u0010w\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\bw\u0010\u0018\u001a\u0004\bx\u0010\u001aR\u001b\u0010y\u001a\u0004\u0018\u00010\u001f8\u0006@\u0006¢\u0006\f\n\u0004\by\u0010!\u001a\u0004\bz\u0010#R\u001b\u0010{\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b{\u0010\u0018\u001a\u0004\b|\u0010\u001aR\u001b\u0010}\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\f\n\u0004\b}\u0010\u0018\u001a\u0004\b~\u0010\u001aR\u001c\u0010\u007f\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\r\n\u0004\b\u007f\u0010-\u001a\u0005\b\u0080\u0001\u0010/R,\u0010\u0082\u0001\u001a\u0005\u0018\u00010\u0081\u00018\u0016@\u0016X\u0096\u000e¢\u0006\u0018\n\u0006\b\u0082\u0001\u0010\u0083\u0001\u001a\u0006\b\u0084\u0001\u0010\u0085\u0001\"\u0006\b\u0086\u0001\u0010\u0087\u0001R\u001e\u0010\u0088\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0088\u0001\u0010\u0018\u001a\u0005\b\u0089\u0001\u0010\u001aR\u001e\u0010\u008a\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008a\u0001\u0010\u0018\u001a\u0005\b\u008b\u0001\u0010\u001aR\u001e\u0010\u008c\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008c\u0001\u0010\u0018\u001a\u0005\b\u008d\u0001\u0010\u001aR\u001e\u0010\u008e\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u008e\u0001\u0010\u0011\u001a\u0005\b\u008f\u0001\u0010\u0013R\u001e\u0010\u0090\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0090\u0001\u0010\u0018\u001a\u0005\b\u0091\u0001\u0010\u001aR\u001e\u0010\u0092\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0092\u0001\u0010\u0018\u001a\u0005\b\u0093\u0001\u0010\u001aR\u001e\u0010\u0094\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0094\u0001\u0010\u0018\u001a\u0005\b\u0095\u0001\u0010\u001aR\u001e\u0010\u0096\u0001\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0096\u0001\u0010-\u001a\u0005\b\u0097\u0001\u0010/R\u001e\u0010\u0098\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b\u0098\u0001\u0010\u0011\u001a\u0005\b\u0099\u0001\u0010\u0013R\u001e\u0010\u009a\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009a\u0001\u0010\u0018\u001a\u0005\b\u009b\u0001\u0010\u001aR\u001e\u0010\u009c\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009c\u0001\u0010\u0018\u001a\u0005\b\u009d\u0001\u0010\u001aR\u001e\u0010\u009e\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u009e\u0001\u0010\u0018\u001a\u0005\b\u009f\u0001\u0010\u001aR\u001e\u0010 \u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\b \u0001\u0010\u0011\u001a\u0005\b¡\u0001\u0010\u0013R\u001e\u0010¢\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b¢\u0001\u0010\u0018\u001a\u0005\b£\u0001\u0010\u001aR,\u0010¥\u0001\u001a\u0005\u0018\u00010¤\u00018\u0016@\u0016X\u0096\u000e¢\u0006\u0018\n\u0006\b¥\u0001\u0010¦\u0001\u001a\u0006\b§\u0001\u0010¨\u0001\"\u0006\b©\u0001\u0010ª\u0001R\u001e\u0010«\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b«\u0001\u0010\u0018\u001a\u0005\b¬\u0001\u0010\u001aR\u001e\u0010\u00ad\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b\u00ad\u0001\u0010\u0018\u001a\u0005\b®\u0001\u0010\u001aR\u001e\u0010¯\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b¯\u0001\u0010\u0018\u001a\u0005\b°\u0001\u0010\u001aR\u001e\u0010±\u0001\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\u000e\n\u0005\b±\u0001\u0010-\u001a\u0005\b²\u0001\u0010/R\u001e\u0010³\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b³\u0001\u0010\u0018\u001a\u0005\b´\u0001\u0010\u001aR\u001e\u0010µ\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bµ\u0001\u0010\u0011\u001a\u0005\b¶\u0001\u0010\u0013R\u001e\u0010·\u0001\u001a\u0004\u0018\u00010\f8\u0006@\u0006¢\u0006\u000e\n\u0005\b·\u0001\u0010-\u001a\u0005\b¸\u0001\u0010/R\u001e\u0010¹\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b¹\u0001\u0010\u0018\u001a\u0005\bº\u0001\u0010\u001aR\u001e\u0010»\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b»\u0001\u0010\u0018\u001a\u0005\b¼\u0001\u0010\u001aR\u001e\u0010½\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b½\u0001\u0010\u0018\u001a\u0005\b¾\u0001\u0010\u001aR\u001e\u0010¿\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b¿\u0001\u0010\u0018\u001a\u0005\bÀ\u0001\u0010\u001aR\u001e\u0010Á\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÁ\u0001\u0010\u0018\u001a\u0005\bÂ\u0001\u0010\u001aR\u001e\u0010Ã\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÃ\u0001\u0010\u0018\u001a\u0005\bÄ\u0001\u0010\u001aR\u001e\u0010Å\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÅ\u0001\u0010\u0018\u001a\u0005\bÆ\u0001\u0010\u001aR\u001e\u0010Ç\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÇ\u0001\u0010\u0018\u001a\u0005\bÈ\u0001\u0010\u001aR\u001e\u0010É\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÉ\u0001\u0010\u0018\u001a\u0005\bÊ\u0001\u0010\u001aR\u001e\u0010Ë\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bË\u0001\u0010\u0018\u001a\u0005\bÌ\u0001\u0010\u001aR\u001e\u0010Í\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÍ\u0001\u0010\u0018\u001a\u0005\bÎ\u0001\u0010\u001aR\u001e\u0010Ï\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÏ\u0001\u0010\u0018\u001a\u0005\bÐ\u0001\u0010\u001aR\u001e\u0010Ñ\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÑ\u0001\u0010\u0018\u001a\u0005\bÒ\u0001\u0010\u001aR\u001e\u0010Ó\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÓ\u0001\u0010\u0018\u001a\u0005\bÔ\u0001\u0010\u001aR\u001e\u0010Õ\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÕ\u0001\u0010\u0018\u001a\u0005\bÖ\u0001\u0010\u001aR\u001e\u0010×\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\b×\u0001\u0010\u0018\u001a\u0005\bØ\u0001\u0010\u001aR\u001e\u0010Ù\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÙ\u0001\u0010\u0018\u001a\u0005\bÚ\u0001\u0010\u001aR\u001e\u0010Û\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bÛ\u0001\u0010\u0018\u001a\u0005\bÜ\u0001\u0010\u001aR\u001e\u0010Ý\u0001\u001a\u0004\u0018\u00010\u000f8\u0006@\u0006¢\u0006\u000e\n\u0005\bÝ\u0001\u0010\u0011\u001a\u0005\bÞ\u0001\u0010\u0013R\u001e\u0010ß\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bß\u0001\u0010\u0018\u001a\u0005\bà\u0001\u0010\u001aR\u001e\u0010á\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bá\u0001\u0010\u0018\u001a\u0005\bâ\u0001\u0010\u001aR\u001e\u0010ã\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bã\u0001\u0010\u0018\u001a\u0005\bä\u0001\u0010\u001aR\u001e\u0010å\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bå\u0001\u0010\u0018\u001a\u0005\bæ\u0001\u0010\u001aR\u001e\u0010ç\u0001\u001a\u0004\u0018\u00010\u00168\u0006@\u0006¢\u0006\u000e\n\u0005\bç\u0001\u0010\u0018\u001a\u0005\bè\u0001\u0010\u001a¨\u0006é\u0001"}, d2 = {"Lcom/discord/analytics/generated/events/TrackVoiceDisconnect;", "Lcom/discord/api/science/AnalyticsSchema;", "Lcom/discord/analytics/generated/traits/TrackBaseReceiver;", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurationsReceiver;", "", "toString", "()Ljava/lang/String;", "", "hashCode", "()I", "", "other", "", "equals", "(Ljava/lang/Object;)Z", "", "encryptionMode", "Ljava/lang/CharSequence;", "getEncryptionMode", "()Ljava/lang/CharSequence;", "cloudflareBestRegion", "getCloudflareBestRegion", "", "packetsReceived", "Ljava/lang/Long;", "getPacketsReceived", "()Ljava/lang/Long;", "port", "getPort", "durationListening", "getDurationListening", "", "audioInputSensitivity", "Ljava/lang/Float;", "getAudioInputSensitivity", "()Ljava/lang/Float;", "viewModeFocusDurationMs", "getViewModeFocusDurationMs", "maxSpeakerCount", "getMaxSpeakerCount", "relativeReceptionDelayMax", "getRelativeReceptionDelayMax", "audioJitterBufferP99", "getAudioJitterBufferP99", "automaticAudioInputSensitivityEnabled", "Ljava/lang/Boolean;", "getAutomaticAudioInputSensitivityEnabled", "()Ljava/lang/Boolean;", "audioJitterDelayP95", "getAudioJitterDelayP95", "protocol", "getProtocol", "packetsSentLost", "getPacketsSentLost", "totalSpeakerCount", "getTotalSpeakerCount", "mos1", "getMos1", "channelId", "getChannelId", ModelAuditLogEntry.CHANGE_KEY_REASON, "getReason", "relativeReceptionDelayMean", "getRelativeReceptionDelayMean", "frameOpNormal", "getFrameOpNormal", "mosMean", "getMosMean", "frameOpAccelerated", "getFrameOpAccelerated", "rtcWorkerBackendVersion", "getRtcWorkerBackendVersion", "viewModeToggleCount", "getViewModeToggleCount", "bytesSent", "getBytesSent", "noiseSuppressionEnabled", "getNoiseSuppressionEnabled", "bytesReceived", "getBytesReceived", "audioJitterDelayMax", "getAudioJitterDelayMax", "relativePlayoutDelayP95", "getRelativePlayoutDelayP95", "rtcConnectionId", "getRtcConnectionId", "decryptionFailures", "getDecryptionFailures", "audioDecodedMutedOutput", "getAudioDecodedMutedOutput", "relativePlayoutDelayP75", "getRelativePlayoutDelayP75", "automaticGainControlEnabled", "getAutomaticGainControlEnabled", "pingAverage", "getPingAverage", "inputDetected", "getInputDetected", "frameOpSilent", "getFrameOpSilent", "maxVoiceStateCount", "getMaxVoiceStateCount", "relativeReceptionDelayP75", "getRelativeReceptionDelayP75", "relativePlayoutDelayP99", "getRelativePlayoutDelayP99", "audioJitterDelayP75", "getAudioJitterDelayP75", "packetsSent", "getPacketsSent", "analyticsSchemaTypeName", "Ljava/lang/String;", "d", "guildId", "getGuildId", "channelType", "getChannelType", "audioJitterBufferP95", "getAudioJitterBufferP95", "mos3", "getMos3", "voiceOutputVolume", "getVoiceOutputVolume", "frameOpPreemptiveexpanded", "getFrameOpPreemptiveexpanded", "pingTimeout", "getPingTimeout", "echoCancellationEnabled", "getEchoCancellationEnabled", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "trackNetworkInformationDurations", "Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "getTrackNetworkInformationDurations", "()Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;", "setTrackNetworkInformationDurations", "(Lcom/discord/analytics/generated/traits/TrackNetworkInformationDurations;)V", "audioJitterDelayP99", "getAudioJitterDelayP99", "durationSpeaking", "getDurationSpeaking", "durationConnected", "getDurationConnected", "audioInputMode", "getAudioInputMode", "relativeReceptionDelayP99", "getRelativeReceptionDelayP99", "totalVoiceStateCount", "getTotalVoiceStateCount", "pingBadCount", "getPingBadCount", "noiseCancellationEnabled", "getNoiseCancellationEnabled", "mediaSessionId", "getMediaSessionId", "packetsReceivedLost", "getPacketsReceivedLost", "audioJitterTargetP75", "getAudioJitterTargetP75", "frameOpCng", "getFrameOpCng", "context", "getContext", "frameOpMerged", "getFrameOpMerged", "Lcom/discord/analytics/generated/traits/TrackBase;", "trackBase", "Lcom/discord/analytics/generated/traits/TrackBase;", "getTrackBase", "()Lcom/discord/analytics/generated/traits/TrackBase;", "setTrackBase", "(Lcom/discord/analytics/generated/traits/TrackBase;)V", "channelBitrate", "getChannelBitrate", "connectCount", "getConnectCount", "relativePlayoutDelayMax", "getRelativePlayoutDelayMax", "reconnect", "getReconnect", "totalListenerCount", "getTotalListenerCount", "voiceBackendVersion", "getVoiceBackendVersion", "noInputDetectedNotice", "getNoInputDetectedNotice", "audioJitterTargetMean", "getAudioJitterTargetMean", "audioJitterBufferMean", "getAudioJitterBufferMean", "mos4", "getMos4", "frameOpExpanded", "getFrameOpExpanded", "audioDecodedNormal", "getAudioDecodedNormal", "duration", "getDuration", "packetsLost", "getPacketsLost", "viewModeGridDurationMs", "getViewModeGridDurationMs", "audioJitterTargetP99", "getAudioJitterTargetP99", "mos2", "getMos2", "audioJitterBufferP75", "getAudioJitterBufferP75", "audioDecodedPlc", "getAudioDecodedPlc", "durationParticipation", "getDurationParticipation", "audioJitterTargetP95", "getAudioJitterTargetP95", "audioDecodedCng", "getAudioDecodedCng", "audioDecodedPlccng", "getAudioDecodedPlccng", "channelCount", "getChannelCount", "audioJitterDelayMean", "getAudioJitterDelayMean", "hostname", "getHostname", "maxListenerCount", "getMaxListenerCount", "audioJitterBufferMax", "getAudioJitterBufferMax", "relativePlayoutDelayMean", "getRelativePlayoutDelayMean", "relativeReceptionDelayP95", "getRelativeReceptionDelayP95", "audioJitterTargetMax", "getAudioJitterTargetMax", "analytics_release"}, k = 1, mv = {1, 4, 2})
/* loaded from: classes.dex */
public final /* data */ class TrackVoiceDisconnect implements AnalyticsSchema, TrackBase2, TrackNetworkInformationDurations2 {
    private TrackBase trackBase;
    private TrackNetworkInformationDurations trackNetworkInformationDurations;
    private final CharSequence mediaSessionId = null;
    private final CharSequence hostname = null;
    private final CharSequence cloudflareBestRegion = null;
    private final Long port = null;
    private final CharSequence protocol = null;
    private final Boolean reconnect = null;
    private final CharSequence reason = null;
    private final Long duration = null;
    private final CharSequence rtcConnectionId = null;
    private final Long channelId = null;
    private final Long channelType = null;
    private final Long channelBitrate = null;
    private final Long guildId = null;
    private final CharSequence context = null;
    private final Long connectCount = null;
    private final Long packetsSent = null;
    private final Long packetsSentLost = null;
    private final Long pingAverage = null;
    private final Long pingBadCount = null;
    private final Long pingTimeout = null;
    private final Long packetsReceived = null;
    private final Long packetsReceivedLost = null;
    private final Long packetsLost = null;
    private final Boolean inputDetected = null;
    private final Boolean noInputDetectedNotice = null;
    private final Long audioJitterBufferMean = null;
    private final Long audioJitterBufferP75 = null;
    private final Long audioJitterBufferP95 = null;
    private final Long audioJitterBufferP99 = null;
    private final Long audioJitterBufferMax = null;
    private final Long audioJitterDelayMean = null;
    private final Long audioJitterDelayP75 = null;
    private final Long audioJitterDelayP95 = null;
    private final Long audioJitterDelayP99 = null;
    private final Long audioJitterDelayMax = null;
    private final Long audioJitterTargetMean = null;
    private final Long audioJitterTargetP75 = null;
    private final Long audioJitterTargetP95 = null;
    private final Long audioJitterTargetP99 = null;
    private final Long audioJitterTargetMax = null;
    private final Long relativeReceptionDelayMean = null;
    private final Long relativeReceptionDelayP75 = null;
    private final Long relativeReceptionDelayP95 = null;
    private final Long relativeReceptionDelayP99 = null;
    private final Long relativeReceptionDelayMax = null;
    private final Long relativePlayoutDelayMean = null;
    private final Long relativePlayoutDelayP75 = null;
    private final Long relativePlayoutDelayP95 = null;
    private final Long relativePlayoutDelayP99 = null;
    private final Long relativePlayoutDelayMax = null;
    private final Float mosMean = null;
    private final Long mos1 = null;
    private final Long mos2 = null;
    private final Long mos3 = null;
    private final Long mos4 = null;
    private final CharSequence audioInputMode = null;
    private final Long audioDecodedNormal = null;
    private final Long audioDecodedPlc = null;
    private final Long audioDecodedPlccng = null;
    private final Long audioDecodedCng = null;
    private final Long audioDecodedMutedOutput = null;
    private final Long frameOpSilent = null;
    private final Long frameOpNormal = null;
    private final Long frameOpMerged = null;
    private final Long frameOpExpanded = null;
    private final Long frameOpAccelerated = null;
    private final Long frameOpPreemptiveexpanded = null;
    private final Long frameOpCng = null;
    private final Boolean automaticAudioInputSensitivityEnabled = null;
    private final Float audioInputSensitivity = null;
    private final Boolean echoCancellationEnabled = null;
    private final Boolean noiseSuppressionEnabled = null;
    private final Boolean noiseCancellationEnabled = null;
    private final Boolean automaticGainControlEnabled = null;
    private final Float voiceOutputVolume = null;
    private final Long maxVoiceStateCount = null;
    private final Long totalVoiceStateCount = null;
    private final Long durationListening = null;
    private final Long durationSpeaking = null;
    private final Long durationParticipation = null;
    private final Long durationConnected = null;
    private final Long decryptionFailures = null;
    private final CharSequence encryptionMode = null;
    private final Long channelCount = null;
    private final Long maxSpeakerCount = null;
    private final Long totalSpeakerCount = null;
    private final Long maxListenerCount = null;
    private final Long totalListenerCount = null;
    private final CharSequence voiceBackendVersion = null;
    private final CharSequence rtcWorkerBackendVersion = null;
    private final Long viewModeGridDurationMs = null;
    private final Long viewModeFocusDurationMs = null;
    private final Long viewModeToggleCount = null;
    private final Long bytesSent = null;
    private final Long bytesReceived = null;
    private final transient String analyticsSchemaTypeName = "voice_disconnect";

    @Override // com.discord.api.science.AnalyticsSchema
    /* renamed from: d, reason: from getter */
    public String getAnalyticsSchemaTypeName() {
        return this.analyticsSchemaTypeName;
    }

    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (!(other instanceof TrackVoiceDisconnect)) {
            return false;
        }
        TrackVoiceDisconnect trackVoiceDisconnect = (TrackVoiceDisconnect) other;
        return Intrinsics3.areEqual(this.mediaSessionId, trackVoiceDisconnect.mediaSessionId) && Intrinsics3.areEqual(this.hostname, trackVoiceDisconnect.hostname) && Intrinsics3.areEqual(this.cloudflareBestRegion, trackVoiceDisconnect.cloudflareBestRegion) && Intrinsics3.areEqual(this.port, trackVoiceDisconnect.port) && Intrinsics3.areEqual(this.protocol, trackVoiceDisconnect.protocol) && Intrinsics3.areEqual(this.reconnect, trackVoiceDisconnect.reconnect) && Intrinsics3.areEqual(this.reason, trackVoiceDisconnect.reason) && Intrinsics3.areEqual(this.duration, trackVoiceDisconnect.duration) && Intrinsics3.areEqual(this.rtcConnectionId, trackVoiceDisconnect.rtcConnectionId) && Intrinsics3.areEqual(this.channelId, trackVoiceDisconnect.channelId) && Intrinsics3.areEqual(this.channelType, trackVoiceDisconnect.channelType) && Intrinsics3.areEqual(this.channelBitrate, trackVoiceDisconnect.channelBitrate) && Intrinsics3.areEqual(this.guildId, trackVoiceDisconnect.guildId) && Intrinsics3.areEqual(this.context, trackVoiceDisconnect.context) && Intrinsics3.areEqual(this.connectCount, trackVoiceDisconnect.connectCount) && Intrinsics3.areEqual(this.packetsSent, trackVoiceDisconnect.packetsSent) && Intrinsics3.areEqual(this.packetsSentLost, trackVoiceDisconnect.packetsSentLost) && Intrinsics3.areEqual(this.pingAverage, trackVoiceDisconnect.pingAverage) && Intrinsics3.areEqual(this.pingBadCount, trackVoiceDisconnect.pingBadCount) && Intrinsics3.areEqual(this.pingTimeout, trackVoiceDisconnect.pingTimeout) && Intrinsics3.areEqual(this.packetsReceived, trackVoiceDisconnect.packetsReceived) && Intrinsics3.areEqual(this.packetsReceivedLost, trackVoiceDisconnect.packetsReceivedLost) && Intrinsics3.areEqual(this.packetsLost, trackVoiceDisconnect.packetsLost) && Intrinsics3.areEqual(this.inputDetected, trackVoiceDisconnect.inputDetected) && Intrinsics3.areEqual(this.noInputDetectedNotice, trackVoiceDisconnect.noInputDetectedNotice) && Intrinsics3.areEqual(this.audioJitterBufferMean, trackVoiceDisconnect.audioJitterBufferMean) && Intrinsics3.areEqual(this.audioJitterBufferP75, trackVoiceDisconnect.audioJitterBufferP75) && Intrinsics3.areEqual(this.audioJitterBufferP95, trackVoiceDisconnect.audioJitterBufferP95) && Intrinsics3.areEqual(this.audioJitterBufferP99, trackVoiceDisconnect.audioJitterBufferP99) && Intrinsics3.areEqual(this.audioJitterBufferMax, trackVoiceDisconnect.audioJitterBufferMax) && Intrinsics3.areEqual(this.audioJitterDelayMean, trackVoiceDisconnect.audioJitterDelayMean) && Intrinsics3.areEqual(this.audioJitterDelayP75, trackVoiceDisconnect.audioJitterDelayP75) && Intrinsics3.areEqual(this.audioJitterDelayP95, trackVoiceDisconnect.audioJitterDelayP95) && Intrinsics3.areEqual(this.audioJitterDelayP99, trackVoiceDisconnect.audioJitterDelayP99) && Intrinsics3.areEqual(this.audioJitterDelayMax, trackVoiceDisconnect.audioJitterDelayMax) && Intrinsics3.areEqual(this.audioJitterTargetMean, trackVoiceDisconnect.audioJitterTargetMean) && Intrinsics3.areEqual(this.audioJitterTargetP75, trackVoiceDisconnect.audioJitterTargetP75) && Intrinsics3.areEqual(this.audioJitterTargetP95, trackVoiceDisconnect.audioJitterTargetP95) && Intrinsics3.areEqual(this.audioJitterTargetP99, trackVoiceDisconnect.audioJitterTargetP99) && Intrinsics3.areEqual(this.audioJitterTargetMax, trackVoiceDisconnect.audioJitterTargetMax) && Intrinsics3.areEqual(this.relativeReceptionDelayMean, trackVoiceDisconnect.relativeReceptionDelayMean) && Intrinsics3.areEqual(this.relativeReceptionDelayP75, trackVoiceDisconnect.relativeReceptionDelayP75) && Intrinsics3.areEqual(this.relativeReceptionDelayP95, trackVoiceDisconnect.relativeReceptionDelayP95) && Intrinsics3.areEqual(this.relativeReceptionDelayP99, trackVoiceDisconnect.relativeReceptionDelayP99) && Intrinsics3.areEqual(this.relativeReceptionDelayMax, trackVoiceDisconnect.relativeReceptionDelayMax) && Intrinsics3.areEqual(this.relativePlayoutDelayMean, trackVoiceDisconnect.relativePlayoutDelayMean) && Intrinsics3.areEqual(this.relativePlayoutDelayP75, trackVoiceDisconnect.relativePlayoutDelayP75) && Intrinsics3.areEqual(this.relativePlayoutDelayP95, trackVoiceDisconnect.relativePlayoutDelayP95) && Intrinsics3.areEqual(this.relativePlayoutDelayP99, trackVoiceDisconnect.relativePlayoutDelayP99) && Intrinsics3.areEqual(this.relativePlayoutDelayMax, trackVoiceDisconnect.relativePlayoutDelayMax) && Intrinsics3.areEqual(this.mosMean, trackVoiceDisconnect.mosMean) && Intrinsics3.areEqual(this.mos1, trackVoiceDisconnect.mos1) && Intrinsics3.areEqual(this.mos2, trackVoiceDisconnect.mos2) && Intrinsics3.areEqual(this.mos3, trackVoiceDisconnect.mos3) && Intrinsics3.areEqual(this.mos4, trackVoiceDisconnect.mos4) && Intrinsics3.areEqual(this.audioInputMode, trackVoiceDisconnect.audioInputMode) && Intrinsics3.areEqual(this.audioDecodedNormal, trackVoiceDisconnect.audioDecodedNormal) && Intrinsics3.areEqual(this.audioDecodedPlc, trackVoiceDisconnect.audioDecodedPlc) && Intrinsics3.areEqual(this.audioDecodedPlccng, trackVoiceDisconnect.audioDecodedPlccng) && Intrinsics3.areEqual(this.audioDecodedCng, trackVoiceDisconnect.audioDecodedCng) && Intrinsics3.areEqual(this.audioDecodedMutedOutput, trackVoiceDisconnect.audioDecodedMutedOutput) && Intrinsics3.areEqual(this.frameOpSilent, trackVoiceDisconnect.frameOpSilent) && Intrinsics3.areEqual(this.frameOpNormal, trackVoiceDisconnect.frameOpNormal) && Intrinsics3.areEqual(this.frameOpMerged, trackVoiceDisconnect.frameOpMerged) && Intrinsics3.areEqual(this.frameOpExpanded, trackVoiceDisconnect.frameOpExpanded) && Intrinsics3.areEqual(this.frameOpAccelerated, trackVoiceDisconnect.frameOpAccelerated) && Intrinsics3.areEqual(this.frameOpPreemptiveexpanded, trackVoiceDisconnect.frameOpPreemptiveexpanded) && Intrinsics3.areEqual(this.frameOpCng, trackVoiceDisconnect.frameOpCng) && Intrinsics3.areEqual(this.automaticAudioInputSensitivityEnabled, trackVoiceDisconnect.automaticAudioInputSensitivityEnabled) && Intrinsics3.areEqual(this.audioInputSensitivity, trackVoiceDisconnect.audioInputSensitivity) && Intrinsics3.areEqual(this.echoCancellationEnabled, trackVoiceDisconnect.echoCancellationEnabled) && Intrinsics3.areEqual(this.noiseSuppressionEnabled, trackVoiceDisconnect.noiseSuppressionEnabled) && Intrinsics3.areEqual(this.noiseCancellationEnabled, trackVoiceDisconnect.noiseCancellationEnabled) && Intrinsics3.areEqual(this.automaticGainControlEnabled, trackVoiceDisconnect.automaticGainControlEnabled) && Intrinsics3.areEqual(this.voiceOutputVolume, trackVoiceDisconnect.voiceOutputVolume) && Intrinsics3.areEqual(this.maxVoiceStateCount, trackVoiceDisconnect.maxVoiceStateCount) && Intrinsics3.areEqual(this.totalVoiceStateCount, trackVoiceDisconnect.totalVoiceStateCount) && Intrinsics3.areEqual(this.durationListening, trackVoiceDisconnect.durationListening) && Intrinsics3.areEqual(this.durationSpeaking, trackVoiceDisconnect.durationSpeaking) && Intrinsics3.areEqual(this.durationParticipation, trackVoiceDisconnect.durationParticipation) && Intrinsics3.areEqual(this.durationConnected, trackVoiceDisconnect.durationConnected) && Intrinsics3.areEqual(this.decryptionFailures, trackVoiceDisconnect.decryptionFailures) && Intrinsics3.areEqual(this.encryptionMode, trackVoiceDisconnect.encryptionMode) && Intrinsics3.areEqual(this.channelCount, trackVoiceDisconnect.channelCount) && Intrinsics3.areEqual(this.maxSpeakerCount, trackVoiceDisconnect.maxSpeakerCount) && Intrinsics3.areEqual(this.totalSpeakerCount, trackVoiceDisconnect.totalSpeakerCount) && Intrinsics3.areEqual(this.maxListenerCount, trackVoiceDisconnect.maxListenerCount) && Intrinsics3.areEqual(this.totalListenerCount, trackVoiceDisconnect.totalListenerCount) && Intrinsics3.areEqual(this.voiceBackendVersion, trackVoiceDisconnect.voiceBackendVersion) && Intrinsics3.areEqual(this.rtcWorkerBackendVersion, trackVoiceDisconnect.rtcWorkerBackendVersion) && Intrinsics3.areEqual(this.viewModeGridDurationMs, trackVoiceDisconnect.viewModeGridDurationMs) && Intrinsics3.areEqual(this.viewModeFocusDurationMs, trackVoiceDisconnect.viewModeFocusDurationMs) && Intrinsics3.areEqual(this.viewModeToggleCount, trackVoiceDisconnect.viewModeToggleCount) && Intrinsics3.areEqual(this.bytesSent, trackVoiceDisconnect.bytesSent) && Intrinsics3.areEqual(this.bytesReceived, trackVoiceDisconnect.bytesReceived);
    }

    public int hashCode() {
        CharSequence charSequence = this.mediaSessionId;
        int iHashCode = (charSequence != null ? charSequence.hashCode() : 0) * 31;
        CharSequence charSequence2 = this.hostname;
        int iHashCode2 = (iHashCode + (charSequence2 != null ? charSequence2.hashCode() : 0)) * 31;
        CharSequence charSequence3 = this.cloudflareBestRegion;
        int iHashCode3 = (iHashCode2 + (charSequence3 != null ? charSequence3.hashCode() : 0)) * 31;
        Long l = this.port;
        int iHashCode4 = (iHashCode3 + (l != null ? l.hashCode() : 0)) * 31;
        CharSequence charSequence4 = this.protocol;
        int iHashCode5 = (iHashCode4 + (charSequence4 != null ? charSequence4.hashCode() : 0)) * 31;
        Boolean bool = this.reconnect;
        int iHashCode6 = (iHashCode5 + (bool != null ? bool.hashCode() : 0)) * 31;
        CharSequence charSequence5 = this.reason;
        int iHashCode7 = (iHashCode6 + (charSequence5 != null ? charSequence5.hashCode() : 0)) * 31;
        Long l2 = this.duration;
        int iHashCode8 = (iHashCode7 + (l2 != null ? l2.hashCode() : 0)) * 31;
        CharSequence charSequence6 = this.rtcConnectionId;
        int iHashCode9 = (iHashCode8 + (charSequence6 != null ? charSequence6.hashCode() : 0)) * 31;
        Long l3 = this.channelId;
        int iHashCode10 = (iHashCode9 + (l3 != null ? l3.hashCode() : 0)) * 31;
        Long l4 = this.channelType;
        int iHashCode11 = (iHashCode10 + (l4 != null ? l4.hashCode() : 0)) * 31;
        Long l5 = this.channelBitrate;
        int iHashCode12 = (iHashCode11 + (l5 != null ? l5.hashCode() : 0)) * 31;
        Long l6 = this.guildId;
        int iHashCode13 = (iHashCode12 + (l6 != null ? l6.hashCode() : 0)) * 31;
        CharSequence charSequence7 = this.context;
        int iHashCode14 = (iHashCode13 + (charSequence7 != null ? charSequence7.hashCode() : 0)) * 31;
        Long l7 = this.connectCount;
        int iHashCode15 = (iHashCode14 + (l7 != null ? l7.hashCode() : 0)) * 31;
        Long l8 = this.packetsSent;
        int iHashCode16 = (iHashCode15 + (l8 != null ? l8.hashCode() : 0)) * 31;
        Long l9 = this.packetsSentLost;
        int iHashCode17 = (iHashCode16 + (l9 != null ? l9.hashCode() : 0)) * 31;
        Long l10 = this.pingAverage;
        int iHashCode18 = (iHashCode17 + (l10 != null ? l10.hashCode() : 0)) * 31;
        Long l11 = this.pingBadCount;
        int iHashCode19 = (iHashCode18 + (l11 != null ? l11.hashCode() : 0)) * 31;
        Long l12 = this.pingTimeout;
        int iHashCode20 = (iHashCode19 + (l12 != null ? l12.hashCode() : 0)) * 31;
        Long l13 = this.packetsReceived;
        int iHashCode21 = (iHashCode20 + (l13 != null ? l13.hashCode() : 0)) * 31;
        Long l14 = this.packetsReceivedLost;
        int iHashCode22 = (iHashCode21 + (l14 != null ? l14.hashCode() : 0)) * 31;
        Long l15 = this.packetsLost;
        int iHashCode23 = (iHashCode22 + (l15 != null ? l15.hashCode() : 0)) * 31;
        Boolean bool2 = this.inputDetected;
        int iHashCode24 = (iHashCode23 + (bool2 != null ? bool2.hashCode() : 0)) * 31;
        Boolean bool3 = this.noInputDetectedNotice;
        int iHashCode25 = (iHashCode24 + (bool3 != null ? bool3.hashCode() : 0)) * 31;
        Long l16 = this.audioJitterBufferMean;
        int iHashCode26 = (iHashCode25 + (l16 != null ? l16.hashCode() : 0)) * 31;
        Long l17 = this.audioJitterBufferP75;
        int iHashCode27 = (iHashCode26 + (l17 != null ? l17.hashCode() : 0)) * 31;
        Long l18 = this.audioJitterBufferP95;
        int iHashCode28 = (iHashCode27 + (l18 != null ? l18.hashCode() : 0)) * 31;
        Long l19 = this.audioJitterBufferP99;
        int iHashCode29 = (iHashCode28 + (l19 != null ? l19.hashCode() : 0)) * 31;
        Long l20 = this.audioJitterBufferMax;
        int iHashCode30 = (iHashCode29 + (l20 != null ? l20.hashCode() : 0)) * 31;
        Long l21 = this.audioJitterDelayMean;
        int iHashCode31 = (iHashCode30 + (l21 != null ? l21.hashCode() : 0)) * 31;
        Long l22 = this.audioJitterDelayP75;
        int iHashCode32 = (iHashCode31 + (l22 != null ? l22.hashCode() : 0)) * 31;
        Long l23 = this.audioJitterDelayP95;
        int iHashCode33 = (iHashCode32 + (l23 != null ? l23.hashCode() : 0)) * 31;
        Long l24 = this.audioJitterDelayP99;
        int iHashCode34 = (iHashCode33 + (l24 != null ? l24.hashCode() : 0)) * 31;
        Long l25 = this.audioJitterDelayMax;
        int iHashCode35 = (iHashCode34 + (l25 != null ? l25.hashCode() : 0)) * 31;
        Long l26 = this.audioJitterTargetMean;
        int iHashCode36 = (iHashCode35 + (l26 != null ? l26.hashCode() : 0)) * 31;
        Long l27 = this.audioJitterTargetP75;
        int iHashCode37 = (iHashCode36 + (l27 != null ? l27.hashCode() : 0)) * 31;
        Long l28 = this.audioJitterTargetP95;
        int iHashCode38 = (iHashCode37 + (l28 != null ? l28.hashCode() : 0)) * 31;
        Long l29 = this.audioJitterTargetP99;
        int iHashCode39 = (iHashCode38 + (l29 != null ? l29.hashCode() : 0)) * 31;
        Long l30 = this.audioJitterTargetMax;
        int iHashCode40 = (iHashCode39 + (l30 != null ? l30.hashCode() : 0)) * 31;
        Long l31 = this.relativeReceptionDelayMean;
        int iHashCode41 = (iHashCode40 + (l31 != null ? l31.hashCode() : 0)) * 31;
        Long l32 = this.relativeReceptionDelayP75;
        int iHashCode42 = (iHashCode41 + (l32 != null ? l32.hashCode() : 0)) * 31;
        Long l33 = this.relativeReceptionDelayP95;
        int iHashCode43 = (iHashCode42 + (l33 != null ? l33.hashCode() : 0)) * 31;
        Long l34 = this.relativeReceptionDelayP99;
        int iHashCode44 = (iHashCode43 + (l34 != null ? l34.hashCode() : 0)) * 31;
        Long l35 = this.relativeReceptionDelayMax;
        int iHashCode45 = (iHashCode44 + (l35 != null ? l35.hashCode() : 0)) * 31;
        Long l36 = this.relativePlayoutDelayMean;
        int iHashCode46 = (iHashCode45 + (l36 != null ? l36.hashCode() : 0)) * 31;
        Long l37 = this.relativePlayoutDelayP75;
        int iHashCode47 = (iHashCode46 + (l37 != null ? l37.hashCode() : 0)) * 31;
        Long l38 = this.relativePlayoutDelayP95;
        int iHashCode48 = (iHashCode47 + (l38 != null ? l38.hashCode() : 0)) * 31;
        Long l39 = this.relativePlayoutDelayP99;
        int iHashCode49 = (iHashCode48 + (l39 != null ? l39.hashCode() : 0)) * 31;
        Long l40 = this.relativePlayoutDelayMax;
        int iHashCode50 = (iHashCode49 + (l40 != null ? l40.hashCode() : 0)) * 31;
        Float f = this.mosMean;
        int iHashCode51 = (iHashCode50 + (f != null ? f.hashCode() : 0)) * 31;
        Long l41 = this.mos1;
        int iHashCode52 = (iHashCode51 + (l41 != null ? l41.hashCode() : 0)) * 31;
        Long l42 = this.mos2;
        int iHashCode53 = (iHashCode52 + (l42 != null ? l42.hashCode() : 0)) * 31;
        Long l43 = this.mos3;
        int iHashCode54 = (iHashCode53 + (l43 != null ? l43.hashCode() : 0)) * 31;
        Long l44 = this.mos4;
        int iHashCode55 = (iHashCode54 + (l44 != null ? l44.hashCode() : 0)) * 31;
        CharSequence charSequence8 = this.audioInputMode;
        int iHashCode56 = (iHashCode55 + (charSequence8 != null ? charSequence8.hashCode() : 0)) * 31;
        Long l45 = this.audioDecodedNormal;
        int iHashCode57 = (iHashCode56 + (l45 != null ? l45.hashCode() : 0)) * 31;
        Long l46 = this.audioDecodedPlc;
        int iHashCode58 = (iHashCode57 + (l46 != null ? l46.hashCode() : 0)) * 31;
        Long l47 = this.audioDecodedPlccng;
        int iHashCode59 = (iHashCode58 + (l47 != null ? l47.hashCode() : 0)) * 31;
        Long l48 = this.audioDecodedCng;
        int iHashCode60 = (iHashCode59 + (l48 != null ? l48.hashCode() : 0)) * 31;
        Long l49 = this.audioDecodedMutedOutput;
        int iHashCode61 = (iHashCode60 + (l49 != null ? l49.hashCode() : 0)) * 31;
        Long l50 = this.frameOpSilent;
        int iHashCode62 = (iHashCode61 + (l50 != null ? l50.hashCode() : 0)) * 31;
        Long l51 = this.frameOpNormal;
        int iHashCode63 = (iHashCode62 + (l51 != null ? l51.hashCode() : 0)) * 31;
        Long l52 = this.frameOpMerged;
        int iHashCode64 = (iHashCode63 + (l52 != null ? l52.hashCode() : 0)) * 31;
        Long l53 = this.frameOpExpanded;
        int iHashCode65 = (iHashCode64 + (l53 != null ? l53.hashCode() : 0)) * 31;
        Long l54 = this.frameOpAccelerated;
        int iHashCode66 = (iHashCode65 + (l54 != null ? l54.hashCode() : 0)) * 31;
        Long l55 = this.frameOpPreemptiveexpanded;
        int iHashCode67 = (iHashCode66 + (l55 != null ? l55.hashCode() : 0)) * 31;
        Long l56 = this.frameOpCng;
        int iHashCode68 = (iHashCode67 + (l56 != null ? l56.hashCode() : 0)) * 31;
        Boolean bool4 = this.automaticAudioInputSensitivityEnabled;
        int iHashCode69 = (iHashCode68 + (bool4 != null ? bool4.hashCode() : 0)) * 31;
        Float f2 = this.audioInputSensitivity;
        int iHashCode70 = (iHashCode69 + (f2 != null ? f2.hashCode() : 0)) * 31;
        Boolean bool5 = this.echoCancellationEnabled;
        int iHashCode71 = (iHashCode70 + (bool5 != null ? bool5.hashCode() : 0)) * 31;
        Boolean bool6 = this.noiseSuppressionEnabled;
        int iHashCode72 = (iHashCode71 + (bool6 != null ? bool6.hashCode() : 0)) * 31;
        Boolean bool7 = this.noiseCancellationEnabled;
        int iHashCode73 = (iHashCode72 + (bool7 != null ? bool7.hashCode() : 0)) * 31;
        Boolean bool8 = this.automaticGainControlEnabled;
        int iHashCode74 = (iHashCode73 + (bool8 != null ? bool8.hashCode() : 0)) * 31;
        Float f3 = this.voiceOutputVolume;
        int iHashCode75 = (iHashCode74 + (f3 != null ? f3.hashCode() : 0)) * 31;
        Long l57 = this.maxVoiceStateCount;
        int iHashCode76 = (iHashCode75 + (l57 != null ? l57.hashCode() : 0)) * 31;
        Long l58 = this.totalVoiceStateCount;
        int iHashCode77 = (iHashCode76 + (l58 != null ? l58.hashCode() : 0)) * 31;
        Long l59 = this.durationListening;
        int iHashCode78 = (iHashCode77 + (l59 != null ? l59.hashCode() : 0)) * 31;
        Long l60 = this.durationSpeaking;
        int iHashCode79 = (iHashCode78 + (l60 != null ? l60.hashCode() : 0)) * 31;
        Long l61 = this.durationParticipation;
        int iHashCode80 = (iHashCode79 + (l61 != null ? l61.hashCode() : 0)) * 31;
        Long l62 = this.durationConnected;
        int iHashCode81 = (iHashCode80 + (l62 != null ? l62.hashCode() : 0)) * 31;
        Long l63 = this.decryptionFailures;
        int iHashCode82 = (iHashCode81 + (l63 != null ? l63.hashCode() : 0)) * 31;
        CharSequence charSequence9 = this.encryptionMode;
        int iHashCode83 = (iHashCode82 + (charSequence9 != null ? charSequence9.hashCode() : 0)) * 31;
        Long l64 = this.channelCount;
        int iHashCode84 = (iHashCode83 + (l64 != null ? l64.hashCode() : 0)) * 31;
        Long l65 = this.maxSpeakerCount;
        int iHashCode85 = (iHashCode84 + (l65 != null ? l65.hashCode() : 0)) * 31;
        Long l66 = this.totalSpeakerCount;
        int iHashCode86 = (iHashCode85 + (l66 != null ? l66.hashCode() : 0)) * 31;
        Long l67 = this.maxListenerCount;
        int iHashCode87 = (iHashCode86 + (l67 != null ? l67.hashCode() : 0)) * 31;
        Long l68 = this.totalListenerCount;
        int iHashCode88 = (iHashCode87 + (l68 != null ? l68.hashCode() : 0)) * 31;
        CharSequence charSequence10 = this.voiceBackendVersion;
        int iHashCode89 = (iHashCode88 + (charSequence10 != null ? charSequence10.hashCode() : 0)) * 31;
        CharSequence charSequence11 = this.rtcWorkerBackendVersion;
        int iHashCode90 = (iHashCode89 + (charSequence11 != null ? charSequence11.hashCode() : 0)) * 31;
        Long l69 = this.viewModeGridDurationMs;
        int iHashCode91 = (iHashCode90 + (l69 != null ? l69.hashCode() : 0)) * 31;
        Long l70 = this.viewModeFocusDurationMs;
        int iHashCode92 = (iHashCode91 + (l70 != null ? l70.hashCode() : 0)) * 31;
        Long l71 = this.viewModeToggleCount;
        int iHashCode93 = (iHashCode92 + (l71 != null ? l71.hashCode() : 0)) * 31;
        Long l72 = this.bytesSent;
        int iHashCode94 = (iHashCode93 + (l72 != null ? l72.hashCode() : 0)) * 31;
        Long l73 = this.bytesReceived;
        return iHashCode94 + (l73 != null ? l73.hashCode() : 0);
    }

    public String toString() {
        StringBuilder sbU = outline.U("TrackVoiceDisconnect(mediaSessionId=");
        sbU.append(this.mediaSessionId);
        sbU.append(", hostname=");
        sbU.append(this.hostname);
        sbU.append(", cloudflareBestRegion=");
        sbU.append(this.cloudflareBestRegion);
        sbU.append(", port=");
        sbU.append(this.port);
        sbU.append(", protocol=");
        sbU.append(this.protocol);
        sbU.append(", reconnect=");
        sbU.append(this.reconnect);
        sbU.append(", reason=");
        sbU.append(this.reason);
        sbU.append(", duration=");
        sbU.append(this.duration);
        sbU.append(", rtcConnectionId=");
        sbU.append(this.rtcConnectionId);
        sbU.append(", channelId=");
        sbU.append(this.channelId);
        sbU.append(", channelType=");
        sbU.append(this.channelType);
        sbU.append(", channelBitrate=");
        sbU.append(this.channelBitrate);
        sbU.append(", guildId=");
        sbU.append(this.guildId);
        sbU.append(", context=");
        sbU.append(this.context);
        sbU.append(", connectCount=");
        sbU.append(this.connectCount);
        sbU.append(", packetsSent=");
        sbU.append(this.packetsSent);
        sbU.append(", packetsSentLost=");
        sbU.append(this.packetsSentLost);
        sbU.append(", pingAverage=");
        sbU.append(this.pingAverage);
        sbU.append(", pingBadCount=");
        sbU.append(this.pingBadCount);
        sbU.append(", pingTimeout=");
        sbU.append(this.pingTimeout);
        sbU.append(", packetsReceived=");
        sbU.append(this.packetsReceived);
        sbU.append(", packetsReceivedLost=");
        sbU.append(this.packetsReceivedLost);
        sbU.append(", packetsLost=");
        sbU.append(this.packetsLost);
        sbU.append(", inputDetected=");
        sbU.append(this.inputDetected);
        sbU.append(", noInputDetectedNotice=");
        sbU.append(this.noInputDetectedNotice);
        sbU.append(", audioJitterBufferMean=");
        sbU.append(this.audioJitterBufferMean);
        sbU.append(", audioJitterBufferP75=");
        sbU.append(this.audioJitterBufferP75);
        sbU.append(", audioJitterBufferP95=");
        sbU.append(this.audioJitterBufferP95);
        sbU.append(", audioJitterBufferP99=");
        sbU.append(this.audioJitterBufferP99);
        sbU.append(", audioJitterBufferMax=");
        sbU.append(this.audioJitterBufferMax);
        sbU.append(", audioJitterDelayMean=");
        sbU.append(this.audioJitterDelayMean);
        sbU.append(", audioJitterDelayP75=");
        sbU.append(this.audioJitterDelayP75);
        sbU.append(", audioJitterDelayP95=");
        sbU.append(this.audioJitterDelayP95);
        sbU.append(", audioJitterDelayP99=");
        sbU.append(this.audioJitterDelayP99);
        sbU.append(", audioJitterDelayMax=");
        sbU.append(this.audioJitterDelayMax);
        sbU.append(", audioJitterTargetMean=");
        sbU.append(this.audioJitterTargetMean);
        sbU.append(", audioJitterTargetP75=");
        sbU.append(this.audioJitterTargetP75);
        sbU.append(", audioJitterTargetP95=");
        sbU.append(this.audioJitterTargetP95);
        sbU.append(", audioJitterTargetP99=");
        sbU.append(this.audioJitterTargetP99);
        sbU.append(", audioJitterTargetMax=");
        sbU.append(this.audioJitterTargetMax);
        sbU.append(", relativeReceptionDelayMean=");
        sbU.append(this.relativeReceptionDelayMean);
        sbU.append(", relativeReceptionDelayP75=");
        sbU.append(this.relativeReceptionDelayP75);
        sbU.append(", relativeReceptionDelayP95=");
        sbU.append(this.relativeReceptionDelayP95);
        sbU.append(", relativeReceptionDelayP99=");
        sbU.append(this.relativeReceptionDelayP99);
        sbU.append(", relativeReceptionDelayMax=");
        sbU.append(this.relativeReceptionDelayMax);
        sbU.append(", relativePlayoutDelayMean=");
        sbU.append(this.relativePlayoutDelayMean);
        sbU.append(", relativePlayoutDelayP75=");
        sbU.append(this.relativePlayoutDelayP75);
        sbU.append(", relativePlayoutDelayP95=");
        sbU.append(this.relativePlayoutDelayP95);
        sbU.append(", relativePlayoutDelayP99=");
        sbU.append(this.relativePlayoutDelayP99);
        sbU.append(", relativePlayoutDelayMax=");
        sbU.append(this.relativePlayoutDelayMax);
        sbU.append(", mosMean=");
        sbU.append(this.mosMean);
        sbU.append(", mos1=");
        sbU.append(this.mos1);
        sbU.append(", mos2=");
        sbU.append(this.mos2);
        sbU.append(", mos3=");
        sbU.append(this.mos3);
        sbU.append(", mos4=");
        sbU.append(this.mos4);
        sbU.append(", audioInputMode=");
        sbU.append(this.audioInputMode);
        sbU.append(", audioDecodedNormal=");
        sbU.append(this.audioDecodedNormal);
        sbU.append(", audioDecodedPlc=");
        sbU.append(this.audioDecodedPlc);
        sbU.append(", audioDecodedPlccng=");
        sbU.append(this.audioDecodedPlccng);
        sbU.append(", audioDecodedCng=");
        sbU.append(this.audioDecodedCng);
        sbU.append(", audioDecodedMutedOutput=");
        sbU.append(this.audioDecodedMutedOutput);
        sbU.append(", frameOpSilent=");
        sbU.append(this.frameOpSilent);
        sbU.append(", frameOpNormal=");
        sbU.append(this.frameOpNormal);
        sbU.append(", frameOpMerged=");
        sbU.append(this.frameOpMerged);
        sbU.append(", frameOpExpanded=");
        sbU.append(this.frameOpExpanded);
        sbU.append(", frameOpAccelerated=");
        sbU.append(this.frameOpAccelerated);
        sbU.append(", frameOpPreemptiveexpanded=");
        sbU.append(this.frameOpPreemptiveexpanded);
        sbU.append(", frameOpCng=");
        sbU.append(this.frameOpCng);
        sbU.append(", automaticAudioInputSensitivityEnabled=");
        sbU.append(this.automaticAudioInputSensitivityEnabled);
        sbU.append(", audioInputSensitivity=");
        sbU.append(this.audioInputSensitivity);
        sbU.append(", echoCancellationEnabled=");
        sbU.append(this.echoCancellationEnabled);
        sbU.append(", noiseSuppressionEnabled=");
        sbU.append(this.noiseSuppressionEnabled);
        sbU.append(", noiseCancellationEnabled=");
        sbU.append(this.noiseCancellationEnabled);
        sbU.append(", automaticGainControlEnabled=");
        sbU.append(this.automaticGainControlEnabled);
        sbU.append(", voiceOutputVolume=");
        sbU.append(this.voiceOutputVolume);
        sbU.append(", maxVoiceStateCount=");
        sbU.append(this.maxVoiceStateCount);
        sbU.append(", totalVoiceStateCount=");
        sbU.append(this.totalVoiceStateCount);
        sbU.append(", durationListening=");
        sbU.append(this.durationListening);
        sbU.append(", durationSpeaking=");
        sbU.append(this.durationSpeaking);
        sbU.append(", durationParticipation=");
        sbU.append(this.durationParticipation);
        sbU.append(", durationConnected=");
        sbU.append(this.durationConnected);
        sbU.append(", decryptionFailures=");
        sbU.append(this.decryptionFailures);
        sbU.append(", encryptionMode=");
        sbU.append(this.encryptionMode);
        sbU.append(", channelCount=");
        sbU.append(this.channelCount);
        sbU.append(", maxSpeakerCount=");
        sbU.append(this.maxSpeakerCount);
        sbU.append(", totalSpeakerCount=");
        sbU.append(this.totalSpeakerCount);
        sbU.append(", maxListenerCount=");
        sbU.append(this.maxListenerCount);
        sbU.append(", totalListenerCount=");
        sbU.append(this.totalListenerCount);
        sbU.append(", voiceBackendVersion=");
        sbU.append(this.voiceBackendVersion);
        sbU.append(", rtcWorkerBackendVersion=");
        sbU.append(this.rtcWorkerBackendVersion);
        sbU.append(", viewModeGridDurationMs=");
        sbU.append(this.viewModeGridDurationMs);
        sbU.append(", viewModeFocusDurationMs=");
        sbU.append(this.viewModeFocusDurationMs);
        sbU.append(", viewModeToggleCount=");
        sbU.append(this.viewModeToggleCount);
        sbU.append(", bytesSent=");
        sbU.append(this.bytesSent);
        sbU.append(", bytesReceived=");
        return outline.G(sbU, this.bytesReceived, ")");
    }
}
